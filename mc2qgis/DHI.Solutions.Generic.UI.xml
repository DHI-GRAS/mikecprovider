<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DHI.Solutions.Generic.UI</name>
    </assembly>
    <members>
        <member name="T:DHI.Solutions.Generic.UI.CheckBoxComboBox">
            <summary>
            Martin Lottering : 2007-10-27
            --------------------------------
            This is a usefull control in Filters. Allows you to save space and can replace a Grouped Box of CheckBoxes.
            Currently used on the TasksFilter for TaskStatusses, which means the user can select which Statusses to include
            in the "Search".
            This control does not implement a CheckBoxListBox, instead it adds a wrapper for the normal ComboBox and Items. 
            See the CheckBoxItems property.
            ----------------
            ALSO IMPORTANT: In Data Binding when setting the DataSource. The ValueMember must be a bool type property, because it will 
            be binded to the Checked property of the displayed CheckBox. Also see the DisplayMemberSingleItem for more information.
            ----------------
            Extends the CodeProject PopupComboBox "Simple pop-up control" "http://www.codeproject.com/cs/miscctrl/simplepopup.asp"
            by Lukasz Swiatkowski.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.PopupComboBox">
            <summary>
            CodeProject.com "Simple pop-up control" "http://www.codeproject.com/cs/miscctrl/simplepopup.asp".
            Represents a Windows combo box control with a custom popup control attached.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.PopupComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PopupComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PopupComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PopupComboBox.#ctor">
            <summary>
            Initializes a new instance of the PopupComboBox class.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.PopupComboBox.dropDown">
            <summary>
            The pop-up wrapper for the dropDownControl. 
            Made PROTECTED instead of PRIVATE so descendent classes can set its Resizable property.
            Note however the pop-up properties must be set after the dropDownControl is assigned, since this 
            popup wrapper is recreated when the dropDownControl is assigned.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PopupComboBox.ShowDropDown">
            <summary>
            Shows the drop down.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PopupComboBox.HideDropDown">
            <summary>
            Hides the drop down.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PopupComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PopupComboBox.DropDownControl">
            <summary>
            Gets or sets the drop down control.
            </summary>
            <value>The drop down control.</value>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PopupComboBox.DropDownWidth">
            <summary>
            Gets or sets the value of the DropDownWidth.
            This property is not relevant for this class.
            </summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PopupComboBox.DropDownHeight">
            <summary>
            Gets or sets the value of the DropDownHeight.
            This property is not relevant for this class.
            </summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PopupComboBox.IntegralHeight">
            <summary>
            Gets or sets a value indicating whether Height is IntegralHeight or not.
            This property is not relevant for this class.
            </summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PopupComboBox.Items">
            <summary>
            Gets the value of the Items.
            This property is not relevant for this class.
            </summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PopupComboBox.ItemHeight">
            <summary>
            Gets or sets the value of the ItemHeight.
            This property is not relevant for this class.
            </summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.#ctor">
            <summary>
            Initializes a new instance of the CheckBoxComboBox class.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBox._CheckBoxComboBoxListControl">
            <summary>
            The checkbox list control. The public CheckBoxItems property provides a direct reference to its Items.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBox._displayMemberSingleItem">
            <summary>
            In DataBinding operations, this property will be used as the DisplayMember in the CheckBoxComboBoxListBox.
            The normal/existing "DisplayMember" property is used by the TextBox of the ComboBox to display 
            a concatenated Text of the items selected. This concatenation and its formatting however is controlled 
            by the Binded object, since it owns that property.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.GetCSVText(System.Boolean)">
            <summary>
            Builds a CSV string of the items selected.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.OnCheckBoxCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the CheckBoxCheckedChanged event if it is subscribed.
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.OnDropDownStyleChanged(System.EventArgs)">
            <summary>
            Will add an invisible item when the style is DropDownList,
            to help maintain the correct text in main TextBox.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.OnResize(System.EventArgs)">
            <summary>
            Override method to customize effects when <see cref="T:DHI.Solutions.Generic.UI.CheckBoxComboBox"/> is resized.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.Clear">
            <summary>
            A function to clear/reset the list.
            (Ubiklou : http://www.codeproject.com/KB/combobox/extending_combobox.aspx?msg=2526813#xx2526813xx)
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.ClearSelection">
            <summary>
            Uncheck all items.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Handler for the window process messages.
            </summary>
            <param name="m">Process message structure.</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBox.CheckBoxItems">
            <summary>
            Gets the value of the CheckBoxItems.
            A direct reference to the Items of CheckBoxComboBoxListControl.
            You can use it to Get or Set the Checked status of items manually if you want.
            But do not manipulate the List itself directly, e.g. Adding and Removing, 
            since the list is synchronised when shown with the ComboBox.Items. So for changing 
            the list contents, use Items instead.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBox.DataSource">
            <summary>
            Gets or sets the value of the DataSource.
            The DataSource of the combobox. Refreshes the CheckBox wrappers when this is set.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBox.ValueMember">
            <summary>
            Gets or sets the value of the ValueMember.
            The ValueMember of the combobox. Refreshes the CheckBox wrappers when this is set.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBox.DisplayMemberSingleItem">
            <summary>
            Gets or sets the value of the DisplayMemberSingleItem.
            In DataBinding operations, this property will be used as the DisplayMember in the CheckBoxComboBoxListBox.
            The normal/existing "DisplayMember" property is used by the TextBox of the ComboBox to display 
            a concatenated Text of the items selected. This concatenation however is controlled by the Binded 
            object, since it owns that property.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBox.Items">
            <summary>
            Gets the value of the Items.
            Made this property Browsable again, since the Base Popup hides it. This class uses it again.
            Gets an object representing the collection of the items contained in this 
            System.Windows.Forms.ComboBox.
            </summary>
            <returns>A System.Windows.Forms.ComboBox.ObjectCollection representing the items in 
            the System.Windows.Forms.ComboBox.
            </returns>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CheckBoxComboBox.CheckBoxCheckedChanged">
            <summary>
            Event is raised when checked state of the CheckBoxComboBox is changed.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBox.CheckBoxProperties">
            <summary>
            Gets or sets the value of the CheckBoxProperties.
            The properties that will be assigned to the checkboxes as default values.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControlContainer">
            <summary>
            A container control for the ListControl to ensure the ScrollBar on the ListControl does not
            Paint over the Size grip. Setting the Padding or Margin on the Popup or host control does
            not work as I expected.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControlContainer.#ctor">
            <summary>
            Initializes a new instance of the CheckBoxComboBoxListControlContainer class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControlContainer.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Prescribed by the Popup class to ensure Resize operations work correctly.
            </summary>
            <param name="m">Process message.</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl">
            <summary>
            This ListControl that pops up to the User. It contains the CheckBoxComboBoxItems. 
            The items are docked DockStyle.Top in this control.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl.#ctor(DHI.Solutions.Generic.UI.CheckBoxComboBox)">
            <summary>
            Initializes a new instance of the CheckBoxComboBoxListControl class.
            </summary>
            <param name="owner">Check box combo box.</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl._checkBoxComboBox">
            <summary>
            Simply a reference to the CheckBoxComboBox.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl._items">
            <summary>
            A Typed list of ComboBoxCheckBoxItems.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Prescribed by the Popup control to enable Resize operations.
            </summary>
            <param name="m">Process message.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl.OnVisibleChanged(System.EventArgs)">
            <summary>
            Handler for the visibility changed event of the CheckBoxComboBox.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl.SynchroniseControlsWithComboBoxItems">
            <summary>
            Maintains the controls displayed in the list by keeping them in sync with the actual 
            items in the combobox. (e.g. removing and adding as well as ordering)
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBoxListControl.Items">
            <summary>
            Gets the value of the CheckBoxComboBoxItemList.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem">
            <summary>
            The CheckBox items displayed in the Popup of the ComboBox.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem.#ctor(DHI.Solutions.Generic.UI.CheckBoxComboBox,System.Object)">
            <summary>
            Initializes a new instance of the CheckBoxComboBoxItem class.
            </summary>
            <param name="owner">A reference to the CheckBoxComboBox.</param>
            <param name="comboBoxItem">A reference to the item in the ComboBox.Items that this object is extending.</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem._checkBoxComboBox">
            <summary>
            A reference to the CheckBoxComboBox.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem._comboBoxItem">
            <summary>
            A reference to the Item in ComboBox.Items that this object is extending.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem.AddBindings">
            <summary>
            When using Data Binding operations via the DataSource property of the ComboBox. This
            adds the required Bindings for the CheckBoxes.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem.OnCheckedChanged(System.EventArgs)">
            <summary>
            Handler for the Checked changed event of the CheckBoxComboBox.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem._CheckBoxComboBoxItem_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Added this handler because the control doesn't seem 
            to initialize correctly until shown for the first
            time, which also means the summary text value
            of the combo is out of sync initially.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBoxItem.ComboBoxItem">
            <summary>
            Gets the value of the ComboBoxItem.
            A reference to the Item in ComboBox.Items that this object is extending.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList">
            <summary>
            A Typed List of the CheckBox items.
            Simply a wrapper for the CheckBoxComboBox.Items. A list of CheckBoxComboBoxItem objects.
            This List is automatically synchronised with the Items of the ComboBox and extended to
            handle the additional boolean value. That said, do not Add or Remove using this List, 
            it will be lost or regenerated from the ComboBox.Items.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.#ctor(DHI.Solutions.Generic.UI.CheckBoxComboBox)">
            <summary>
            Initializes a new instance of the CheckBoxComboBoxItemList class.
            </summary>
            <param name="checkBoxComboBox">Check box combo box.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.OnCheckBoxCheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the check box checked changed event if subscribed.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.Add(DHI.Solutions.Generic.UI.CheckBoxComboBoxItem)">
            <summary>
            Adds the check box combo box item.
            </summary>
            <param name="item">Item to be added.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.AddRange(System.Collections.Generic.IEnumerable{DHI.Solutions.Generic.UI.CheckBoxComboBoxItem})">
            <summary>
            Adds collection of the check box combo box items to the check box items.
            </summary>
            <param name="collection">Collection of items.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.Clear">
            <summary>
            Clears the check box combo box items from the check box combo box.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.Remove(DHI.Solutions.Generic.UI.CheckBoxComboBoxItem)">
            <summary>
            Removes a item from the list of items.
            </summary>
            <param name="item">Item to be removed.</param>
            <returns>Success flag : True</returns>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.CheckBoxCheckedChanged">
            <summary>
            Event to be raised on check box checked changed.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxComboBoxItemList.Item(System.String)">
            <summary>
            Returns the item with the specified displayName or Text.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CheckBoxProperties">
            <summary>
            Initializes a new instance of the CheckBoxProperties.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxProperties.#ctor">
            <summary>
            Initializes a new instance of the CheckBoxProperties class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CheckBoxProperties.OnPropertyChanged">
            <summary>
            Raises the PropertyChanged event if it is subscribed.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.Appearance">
            <summary>
            Gets or sets the value of the Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.AutoCheck">
            <summary>
            Gets or sets a value indicating whether to AutoCheck or not.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether to AutoEllipsis or not.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.AutoSize">
            <summary>
            Gets or sets a value indicating whether to AutoSize or not.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.CheckAlign">
            <summary>
            Gets or sets the value of the CheckAlign.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.FlatAppearanceBorderColor">
            <summary>
            Gets or sets the value of the FlatAppearanceBorderColor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.FlatAppearanceBorderSize">
            <summary>
            Gets or sets the value of the FlatAppearanceBorderSize.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.FlatAppearanceCheckedBackColor">
            <summary>
            Gets or sets the value of the FlatAppearanceCheckedBackColor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.FlatAppearanceMouseDownBackColor">
            <summary>
            Gets or sets the value of the FlatAppearanceMouseDownBackColor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.FlatAppearanceMouseOverBackColor">
            <summary>
            Gets or sets the value of the FlatAppearanceMouseOverBackColor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.FlatStyle">
            <summary>
            Gets or sets the value of the FlatStyle.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.ForeColor">
            <summary>
            Gets or sets the value of the ForeColor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.RightToLeft">
            <summary>
            Gets or sets the value of the RightToLeft.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.TextAlign">
            <summary>
            Gets or sets the value of the TextAlign.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CheckBoxProperties.ThreeState">
            <summary>
            Gets or sets a value indicating whether its ThreeState or not.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CheckBoxProperties.PropertyChanged">
            <summary>
            Called when any property changes.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.RemoteHostHelp">
            <summary>
            Class for remote host help form
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostHelp.#ctor">
            <summary>
            Initializes a new instance of the RemoteHostHelp class
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.RemoteHostHelp.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostHelp.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostHelp.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NamespaceDoc">
            <summary>
            <para>
            The <see cref="N:DHI.Solutions.Generic.UI"/> namespace contains basic UI components used across the platform.
            </para>
            <para>
            These include among others tables, explorers, toolstrips and messaging infrastructure.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ListViewColumnSorter">
            <summary>
            This class is an implementation of the 'IComparer' interface.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewColumnSorter.#ctor">
            <summary>
            Initializes a new instance of the ListViewColumnSorter class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewColumnSorter.SortColumn">
            <summary>
            Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewColumnSorter.Order">
            <summary>
            Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Generic_UI">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Account_Not_Valid">
            <summary>
              Looks up a localized string similar to The {0} cannot be connected using provided account {1} and password. Please check them..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AccountLogin_AccountAuthenticationError">
            <summary>
              Looks up a localized string similar to Some unexpected error occured during account authentication on this server. Please try again..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AccountLogin_InvalidUsernameOrPassword">
            <summary>
              Looks up a localized string similar to Invalid username or password..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AccountLogin_PasswordNullOrEmpty">
            <summary>
              Looks up a localized string similar to Password cannot be null or empty..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Appearance_PropertyCategory">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.arrow_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.arrow_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttibuteBuilder_NameOfAttribRepeating_ErrMssg">
            <summary>
              Looks up a localized string similar to Attribute name already exists..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_ErrMssg_Caption">
            <summary>
              Looks up a localized string similar to Attribute Builder.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_FieldInitialDefaultName">
            <summary>
              Looks up a localized string similar to Field.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_LengthOfAttributeChars">
            <summary>
              Looks up a localized string similar to 50.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_LengthOfAttributeChars_ErrMssg">
            <summary>
              Looks up a localized string similar to Length of field name should not exceed {0} characters..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_LoadingColumns_ErrMssg">
            <summary>
              Looks up a localized string similar to Some fields could not be loaded.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_LoadingUnknownColumns_ErrMssg">
            <summary>
              Looks up a localized string similar to One or more columns could not be displayed..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_MissingParamsForAttributes_ErrMssg">
            <summary>
              Looks up a localized string similar to Please provide all values for the attribute before leaving..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_NameOfAttributeEmpty_ErrMssg">
            <summary>
              Looks up a localized string similar to Please enter Attribute name..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_NameOfAttributeInvalid_ErrMssg">
            <summary>
              Looks up a localized string similar to Invalid column name..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_NameOfAttributeSpecialChars_ErrMssg">
            <summary>
              Looks up a localized string similar to Name of attribute should not contain special characters..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.AttributeBuilder_StringDataTypeParamSizeForAttribute_ErrMssg">
            <summary>
              Looks up a localized string similar to Please provide a valid numeric value from 1 to 255..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.bullet_arrow_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.bullet_arrow_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.cancel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.ComputerAndMachineNamesAreMust">
            <summary>
              Looks up a localized string similar to Computer name must be specified. Port is optonal..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Confirmation">
            <summary>
              Looks up a localized string similar to Confirmation.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Confirmation_Message">
            <summary>
              Looks up a localized string similar to Would you like to save the changes before closing?.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Connection_Successful">
            <summary>
              Looks up a localized string similar to Connection is successful..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.ContextMenu_GoToExplorer">
            <summary>
              Looks up a localized string similar to Go To Explorer.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridCell_Appearance_PropertyDescription">
            <summary>
              Looks up a localized string similar to Change the color of the selected cell.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridCell_Appearance_PropertyGroup">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridCell_BackgroundColor_PropertyName">
            <summary>
              Looks up a localized string similar to Background Color.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridCell_DisplayName">
            <summary>
              Looks up a localized string similar to Selected Cell.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridCell_QualityFlag_PropertyName">
            <summary>
              Looks up a localized string similar to Quality Flag.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_Appearance_PropertyDescription">
            <summary>
              Looks up a localized string similar to Adjust the width of the column.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_Appearance_PropertyGroup">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_DigitCount_PropertyDescription">
            <summary>
              Looks up a localized string similar to Define the decimal digits of the column.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_DigitCount_PropertyName">
            <summary>
              Looks up a localized string similar to Digit Count.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_DisplayName">
            <summary>
              Looks up a localized string similar to Selected Column.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_ValueFormat_PropertyDescription">
            <summary>
              Looks up a localized string similar to Define the value format of the column.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_ValueFormat_PropertyName">
            <summary>
              Looks up a localized string similar to Value Format.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridColumn_Width_PropertyName">
            <summary>
              Looks up a localized string similar to Width.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridRow_Appearance_PropertyGroup">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridRow_BackGroundColor_PropertyDescription">
            <summary>
              Looks up a localized string similar to Change the background color of the selected row.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridRow_BackGroundColor_PropertyName">
            <summary>
              Looks up a localized string similar to Background Color.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridRow_DisplayName">
            <summary>
              Looks up a localized string similar to Selected Row.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridRow_Height_PropertyDescription">
            <summary>
              Looks up a localized string similar to Change the height of the row. The minimum height allowed is 20..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridRow_Height_PropertyName">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_Appearance_PropertyDescription">
            <summary>
              Looks up a localized string similar to Change the background color of the DataGrid.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_Appearance_PropertyGroup">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_BackGroundColor_PropertyName">
            <summary>
              Looks up a localized string similar to Background Color.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_CellValue_OverAllowedRangeMax">
            <summary>
              Looks up a localized string similar to The value is out of the allowed range. The value of {0} is greater than {1}.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_CellValue_OverAllowedRangeMin">
            <summary>
              Looks up a localized string similar to The value is out of the allowed range. The value of {0} is less than than {1}.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_SubTitle_PropertyDescription">
            <summary>
              Looks up a localized string similar to Sub Title of the table.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_SubTitle_PropertyName">
            <summary>
              Looks up a localized string similar to Sub Title.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_SubtitleFont_PropertyDescription">
            <summary>
              Looks up a localized string similar to The font of the subtitle.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_SubtitleFont_PropertyName">
            <summary>
              Looks up a localized string similar to Subtitle font.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_Title_PropertyCategory">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_Title_PropertyDescription">
            <summary>
              Looks up a localized string similar to Main Title of the table.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_Title_PropertyGroup">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_Title_PropertyName">
            <summary>
              Looks up a localized string similar to Main Title.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_TitleAppearance_PropertyCategory">
            <summary>
              Looks up a localized string similar to Title Appearance.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_TitleFont_PropertyDescription">
            <summary>
              Looks up a localized string similar to The font of the main title.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomDataGridView_TitleFont_PropertyName">
            <summary>
              Looks up a localized string similar to Title Font.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.CustomMessage">
            <summary>
              Looks up a localized string similar to You can specify upto 5 options for custom message.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Data_Already_Exists_Cannot_Add">
            <summary>
              Looks up a localized string similar to Cannot add data as data already exists with the same XValue.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Error_OutOfMemory">
            <summary>
              Looks up a localized string similar to Input data are too big to be placed in the list.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Has_Changed">
            <summary>
              Looks up a localized string similar to  has changed.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Host_Column">
            <summary>
              Looks up a localized string similar to Host.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Information_ChartValue_DecimalNotValid">
            <summary>
              Looks up a localized string similar to Value is either too large or too small for a decimal..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Information_ChartValue_NotNumeric">
            <summary>
              Looks up a localized string similar to Enter a numeric value..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Input_Password_Again">
            <summary>
              Looks up a localized string similar to Please re-enter the password:.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.InputErrorCaption">
            <summary>
              Looks up a localized string similar to Input Error.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Key_Database">
            <summary>
              Looks up a localized string similar to Database.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Keyword_Invalid_Warning">
            <summary>
              Looks up a localized string similar to The potential keyword {0} could not be recognized. Please re-specify..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Keyword_Value_Invalid">
            <summary>
              Looks up a localized string similar to Value for {0} criteria is invalid. Please re-specify..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.ListViewColumn_Path">
            <summary>
              Looks up a localized string similar to Path.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Loading">
            <summary>
              Looks up a localized string similar to Loading {0}....
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Merge_Warning">
            <summary>
              Looks up a localized string similar to Could not merge to existing table.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Name_Empty_warning">
            <summary>
              Looks up a localized string similar to Name cannot be empty..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.NameValue_MaxCharacters">
            <summary>
              Looks up a localized string similar to Name value cannot contain more than 255 characters.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Operator_Not_Valid">
            <summary>
              Looks up a localized string similar to Operator is not valid for {0}. Please re-specify..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Password_NotMatch">
            <summary>
              Looks up a localized string similar to The confirm password does not match the original one.{0} Please input again..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.pencil">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Port_Column">
            <summary>
              Looks up a localized string similar to Port.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Query_Builder_Title">
            <summary>
              Looks up a localized string similar to Query Builder.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.QueryBuilder_RecentSearches">
            <summary>
              Looks up a localized string similar to Recent Searches.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.QueryBuilder_SavedQueries">
            <summary>
              Looks up a localized string similar to Saved Queries.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.RDBMS_Not_Supported">
            <summary>
              Looks up a localized string similar to RDBMS is not supported..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.RemoteEditor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.RemoteEditor_Help">
             <summary>
               Looks up a localized string similar to &lt;html&gt;
            &lt;body&gt;
                &lt;font size=&quot;2.5&quot; color=&quot;black&quot;&gt;
                &lt;span style=&quot;color: rgb(68, 84, 106); font-family: &amp;quot;Arial&amp;quot;,&amp;quot;sans-serif&amp;quot;; font-size: 10pt;&quot;&gt;
                A remote host is a computer that runs jobs. You can define more than one such
                host and then when scheduling or executing the job, select the computer on which
                the job shall run.&lt;/span&gt;&lt;br /&gt;
                    &lt;br /&gt;
                    &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span
                    style=&quot;color: rgb(68, 84, 106); font-family: &amp;quot;Ari [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.RemoteHost_Description">
            <summary>
              Looks up a localized string similar to The property is used to define the remote hosts..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.RemoteHost_PropertyCategory">
            <summary>
              Looks up a localized string similar to Generic.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.RemoteHost_PropertyName">
            <summary>
              Looks up a localized string similar to Remote hosts.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Save_Changes">
            <summary>
              Looks up a localized string similar to Do you want to save changes?.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Saving">
            <summary>
              Looks up a localized string similar to Saving {0}....
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.search_16x16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.SelectRows_First">
            <summary>
              Looks up a localized string similar to Please select rows to delete first..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.SingleUserPerComputer">
            <summary>
              Looks up a localized string similar to Computer name: {0} already configured for job hosting..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.SolutionAccount_Column">
            <summary>
              Looks up a localized string similar to Solution account.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.SystemErrorMessage">
            <summary>
              Looks up a localized string similar to {0}{0}DSS has encountered an error. We are sorry for the inconvenience. Please help us to resolve the error by giving the steps to re-invoke it in the textbox below..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Table">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Table_Cell">
            <summary>
              Looks up a localized string similar to Table Cell.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Table_Column">
            <summary>
              Looks up a localized string similar to Table Column.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Table_Row">
            <summary>
              Looks up a localized string similar to Table Row.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Type_Operator_Invalid">
            <summary>
              Looks up a localized string similar to Only equal operator is valid for {0}. Wildcard search not possible.  Please re-specify..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Type_Value_Invalid">
            <summary>
              Looks up a localized string similar to The value {0} is not valid for {1}. Please re-specify..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.UniqueNameErr_Caption">
            <summary>
              Looks up a localized string similar to Unique Error.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.UniqueNameErr_Message">
            <summary>
              Looks up a localized string similar to Cannot update it, because {0} already exists ..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.UserName_AlreadySelected">
            <summary>
              Looks up a localized string similar to This user name {0} has already been selected for other window account..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.UserNameFullyQualified">
            <summary>
              Looks up a localized string similar to User name should be fully qualified with domain. e.g. DHI\abc.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Warning_Caption">
            <summary>
              Looks up a localized string similar to Warning.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Generic_UI.Warning_ZipLogFileFaied">
            <summary>
              Looks up a localized string similar to Zip log file failed..
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericRunToolButton">
            <summary>
            The GenericRunTool button is to be used for buttons that execute a tool.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericRunToolButton.#ctor">
            <summary>
            Initializes a new instance of the GenericRunToolButton class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericForm">
            <summary>
            A formatted Form.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericForm.#ctor">
            <summary>
            Initializes a new instance of the GenericForm class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericButton">
            <summary>
            The GenericButton is a formatted Button.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericButton.#ctor">
            <summary>
            Initializes a new instance of the GenericButton class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ExternalToolDefinition">
            <summary>
            External tool definition(Menu will be shown in the setting menu)
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExternalToolDefinition.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExternalToolDefinition.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExternalToolDefinition.Command">
            <summary>
            Gets or sets the Command.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExternalToolDefinition.Arguments">
            <summary>
            Gets or sets the command arguments.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExternalToolDefinition.InitialDirectory">
            <summary>
            Gets or sets the application work directory
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ExternalToolDefinition.PropertyChanged">
            <summary>
            Occurs after an item property changed.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.EntityNotRecognizedException">
            <summary>
            Exception used to indicate that entity is not recognized by a component.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.EntityNotRecognizedException.#ctor">
            <summary>
            Initializes a new instance of the EntityNotRecognizedException class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.EntityNotRecognizedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EntityNotRecognizedException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.EntityNotRecognizedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the EntityNotRecognizedException class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.EntityNotRecognizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the EntityNotRecognizedException class with serialized data.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="ctxt">The StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.AssociatedEntityTreeExplorerBranch`3">
            <summary>
            Explorer branch containing entities associated with wother entities.
            </summary>
            <typeparam name="Entity">Entity represented by the branch.</typeparam>
            <typeparam name="AssociatedEntity">Associated entity represented by the branch.</typeparam>
            <typeparam name="AssociationEntity">Association entity represented by the branch.</typeparam>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ListEntityTreeExplorerBranch`1">
            <summary>
            Tree explorer branch containing non-grouped entities.
            </summary>
            <typeparam name="Entity">Entity type represented by the branch.</typeparam>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TreeExplorerBranch">
            <summary>
            Represents a tree explorer branch.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorerBranch.#ctor">
            <summary>
            Initializes a new instance of the TreeExplorerBranch class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorerBranch.OnPropertyChanged(System.String)">
            <summary>
            Raises PropertyChanged event for specified property name.
            </summary>
            <param name="property">Property which should be indicated as changed.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorerBranch.Explorer">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorerBranch.CurrentPerspective">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorerBranch.AvailablePerspectives">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorerBranch.BranchName">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorerBranch.Enabled">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorerBranch.Visible">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.TreeExplorerBranch.PropertyChanged">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListEntityTreeExplorerBranch`1.EntityList">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListEntityTreeExplorerBranch`1.EntityName">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.AssociatedEntityTreeExplorerBranch`3.AssociatedEntityList">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.AssociatedEntityTreeExplorerBranch`3.AssociationEntityList">
            <inheritdoc />
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomListView">
            <summary>
            Custom listview which could sort by column
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomListView.#ctor">
            <summary>
            Initializes a new instance of the CustomListView class
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericControls">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericControls.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericControls.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericControls.Execute_tool">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericControls.File_open_image">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomDataGridRow">
            <summary>
            The extended DataGridViewRow with only the properties that should be browsable to the user
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridRow.#ctor">
            <summary>
            Initializes a new instance of the CustomDataGridRow class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridRow.ToString">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridRow.BackColor1">
            <summary>
            Gets or sets the background color of the row
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridRow.Height1">
            <summary>
            Gets or sets the height of the row
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridRow.DataGridViewRow">
            <summary>
            Gets or sets the base DataGridViewRow object
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridRow.DisplayName">
            <summary>
            Gets the display name for the row
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Popup">
            <summary>
            CodeProject.com "Simple pop-up control" "http://www.codeproject.com/cs/miscctrl/simplepopup.asp".
            Represents a pop-up window.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:DHI.Solutions.Generic.UI.Popup"/> class.
            </summary>
            <param name="content">The content of the pop-up.</param>
            <remarks>
            Pop-up will be disposed immediately after disposion of the content control.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="content"/> is <code>null</code>.</exception>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog box key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
            <returns>
            true if the key was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.UpdateRegion">
            <summary>
            Updates the pop-up region.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.Show(System.Windows.Forms.Control)">
            <summary>
            Shows pop-up window below the specified control.
            </summary>
            <param name="control">The control below which the pop-up will be shown.</param>
            <remarks>
            When there is no space below the specified control, the pop-up control is shown above it.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <code>null</code>.</exception>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.Show(System.Windows.Forms.Control,System.Drawing.Rectangle)">
            <summary>
            Shows pop-up window below the specified area of specified control.
            </summary>
            <param name="control">The control used to compute screen location of specified area.</param>
            <param name="area">The area of control below which the pop-up will be shown.</param>
            <remarks>
            When there is no space below specified area, the pop-up control is shown above it.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <code>null</code>.</exception>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.SetVisibleCore(System.Boolean)">
            <summary>
            Adjusts the size of the owner <see cref="T:System.Windows.Forms.ToolStrip" /> to accommodate the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> if the owner <see cref="T:System.Windows.Forms.ToolStrip" /> is currently displayed, or clears and resets active <see cref="T:System.Windows.Forms.ToolStripDropDown" /> child controls of the <see cref="T:System.Windows.Forms.ToolStrip" /> if the <see cref="T:System.Windows.Forms.ToolStrip" /> is not currently displayed.
            </summary>
            <param name="visible">true if the owner <see cref="T:System.Windows.Forms.ToolStrip" /> is currently displayed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opening" /> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.OnOpened(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opened" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.OnClosed(System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Handler method to handle the Tool strip drop down closed event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the VisibleChanged event if subscribed and records the last closed time stamp.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.ProcessResizing(System.Windows.Forms.Message@)">
            <summary>
            Processes the resizing messages.
            </summary>
            <param name="m">The message.</param>
            <returns>true, if the WndProc method from the base class shouldn't be invoked.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.PaintSizeGrip(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the size grip.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.Popup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Popup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.Content">
            <summary>
            Gets the content of the pop-up.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.UseFadeEffect">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:DHI.Solutions.Generic.UI.Popup"/> uses the fade effect.
            </summary>
            <value><c>true</c> if pop-up uses the fade effect; otherwise, <c>false</c>.</value>
            <remarks>To use the fade effect, the FocusOnOpen property also has to be set to <c>true</c>.</remarks>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.FocusOnOpen">
            <summary>
            Gets or sets a value indicating whether to focus the content after the pop-up has been opened.
            </summary>
            <value><c>true</c> if the content should be focused after the pop-up has been opened; otherwise, <c>false</c>.</value>
            <remarks>If the FocusOnOpen property is set to <c>false</c>, then pop-up cannot use the fade effect.</remarks>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.AcceptAlt">
            <summary>
            Gets or sets a value indicating whether presing the alt key should close the pop-up.
            </summary>
            <value><c>true</c> if presing the alt key does not close the pop-up; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.Resizable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DHI.Solutions.Generic.UI.Popup"/> is resizable.
            </summary>
            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.MinimumSize">
            <summary>
            Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.MaximumSize">
            <summary>
            Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.CreateParams">
            <summary>
            Gets parameters of a new window.
            </summary>
            <returns>An object of type <see cref="T:System.Windows.Forms.CreateParams" /> used when creating a new window.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Popup.LastClosedTimeStamp">
            <summary>
            Gets or sets the vlaue of the LastClosedTimeStamp
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.SimpleEditor">
            <summary>
            This control is used in displaying the user settings
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.SimpleEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SimpleEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SimpleEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SimpleEditor.#ctor">
            <summary>
            Initializes a new instance of the SimpleEditor class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SimpleEditor.OnStateChanged(DHI.Solutions.Generic.State)">
            <summary>
            Raises the StateChanged event
            </summary>
            <param name="state">EventHandler for state</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SimpleEditor.OnSaved(DHI.Solutions.Generic.IEditable)">
            <summary>
            Raises the Saved event
            </summary>
            <param name="editableObject">EventHandler of IEditable</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SimpleEditor.Refresh">
            <summary>
            Method to refresh the editor.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.SimpleEditor.StateChanged">
            <summary>
            Event for StateChanged of editor
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.SimpleEditor.Saved">
            <summary>
            Event when object is saved
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.SimpleEditor.Object">
            <summary>
            Sets the value for Object.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.SimpleEditor.RefreshButtonVisible">
            <summary>
            Gets or sets a value indicating whether RefreshButtonVisible is true or false.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.SimpleEditor.AllowCancelInModifiedDialog">
            <summary>
            Gets or sets a value indicating whether AllowCancelInModifiedDialog is true/false.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.SimpleEditor.State">
            <summary>
            Gets or sets the value of State.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomMessageDialog">
            <summary>
            Custom error dialog Form
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageDialog.#ctor">
            <summary>
            Initializes a new instance of the CustomMessageDialog class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageDialog.#ctor(System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the CustomMessageDialog class.
            </summary>
            <param name="message">Message to be displayed</param>
            <param name="caption">Caption of the message box</param>
            <param name="actionitems">Array of action items</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageDialog.ShowMessage(System.String,System.String,System.String[])">
            <summary>
            Display message to the user.
            </summary>
            <param name="custommessage">Custom message.</param>
            <param name="caption">Caption of the message box.</param>
            <param name="actionitems">Array of action items</param>
            <returns>error = -1</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageDialog.SetErrorDialogVisualStyle(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Sets the visual style of the error dialog.
            </summary>
            <param name="style">Visual style</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomMessageDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomMessageDialog.Result">
            <summary>
            Gets the Result
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader">
            <summary>
            A formatted multiline textbox with a Generic title bar.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader.#ctor">
            <summary>
            Initializes a new instance of the GenericTextBoxWithHeader class.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader.ContentText">
            <summary>
            Gets or sets the displayed text.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericTextBoxWithHeader.Title">
            <summary>
            Gets or sets the textbox title.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TreeExplorer">
            <summary>
            Represents explorer that displays data using tree.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.BaseExplorer">
            <summary>
            Summary description of BaseExplorer
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.BaseExplorer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.BaseExplorer._shell">
            <summary>
            Application shell.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.#ctor">
            <summary>
            Initializes a new instance of the BaseExplorer class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.Initialize(DHI.Solutions.Generic.IShell)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.OnContextMenuShowing(System.Object,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Raises the ContextMenuShowing event.
            </summary>
            <param name="owner">Object that should be indicated as the owner of the menu.</param>
            <param name="contextMenu">Context menu that is to be shown.</param>
            <returns>True if event was cancelled by an event consumer, false otherwise.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.OnContextMenuShown(System.Object,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Raises the ContextMenuShown event.
            </summary>
            <param name="owner">Object that should be indicated as the owner of the menu.</param>
            <param name="contextMenu">Context menu that was shown.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.OnObjectSelecting(System.Object)">
            <summary>
            Raises the ObjectSelecting event.
            </summary>
            <param name="obj">Object that is about to be selected.</param>
            <returns>True if event was cancelled by an event consumer, false otherwise.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.OnObjectSelected(System.Object)">
            <summary>
            Raises the ObjectSelected event.
            </summary>
            <param name="obj">Object that was selected.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.OnObjectDeselecting(System.Object)">
            <summary>
            Raises the ObjectDeselecting event.
            </summary>
            <param name="obj">Object that is about to be deselected.</param>
            <returns>True if event was cancelled by an event consumer, false otherwise.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.OnObjectDeselected(System.Object)">
            <summary>
            Raises the ObjectDeselected event.
            </summary>
            <param name="obj">Object that was deselected.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.SetPropertiesThread">
            <summary>
            Method for updating the property control in a separate thread.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.SetPropertiesControl">
            <summary>
            Assigns selectable objects from current selection to the properties control and tools explorer.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer.UpdateSelectable(DHI.Solutions.Generic.ISelectable)">
            <summary>
            Persists changes mande to selectable object to database.
            </summary>
            <param name="selectable">Selectable object which should be persisted.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseExplorer._CompareSelectedObjects(System.Collections.Generic.IList{DHI.Solutions.Generic.ISelectable},System.Collections.Generic.IList{DHI.Solutions.Generic.ISelectable})">
            <summary>
            Compare selected objects with  current selected objects
            </summary>
            <param name="propertiesControlSelectedObjects">property control selected objects</param>
            <param name="currentSelectedObjects">current selected objects</param>
            <returns>true if the objects compare</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.SelectableObjects">
            <summary>
            Gets list of objects implementing ISelectable interface based od SelectedObjects list.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.Icons">
            <summary>
            Gets or sets the image list for explorer.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.SelectedObjects">
            <summary>
            Gets the list of objects selected in explorer.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.IsReadonly">
            <summary>
            Gets or sets a value indicating whether the explorer is in readonly mode.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.Caption">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.Control">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseExplorer.IconHandle">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.BaseExplorer.ContextMenuShowing">
            <summary>
            Occurs before a context menu for explorer is shown.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.BaseExplorer.ContextMenuShown">
            <summary>
            Occurs after a context menu for explorer is shown.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.BaseExplorer.ObjectSelecting">
            <summary>
            Occurs before an object is selected in explorer.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.BaseExplorer.ObjectSelected">
            <summary>
            Occurs after an object is selected in explorer.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.BaseExplorer.ObjectDeselecting">
            <summary>
            Occurs before an object is deselected in explorer.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.BaseExplorer.ObjectDeselected">
            <summary>
            Occurs after an object is deselected in explorer.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeAdd">
            <summary>
            Gets the action code for the 'add' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeCopy">
            <summary>
            Gets the action code for the 'copy' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodePasteCopy">
            <summary>
            Gets the action code for the 'paste-copy' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodePasteMove">
            <summary>
            Gets the action code for the 'paste-move' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodePasteLink">
            <summary>
            Gets the action code for the 'paste-link' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeCut">
            <summary>
            Gets the action code for the 'cut' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeDelete">
            <summary>
            Gets the action code for the 'delete' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeRename">
            <summary>
            Gets the action code for the 'rename' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeRefresh">
            <summary>
            Gets the action code for the 'refresh' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeCopyPath">
            <summary>
            Gets the action code for the 'delete' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeDrag">
            <summary>
            Gets the action code for the 'drag' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeAddEntity">
            <summary>
            Gets the action code for 'add entity' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeRenameEntity">
            <summary>
            Gets the action code for 'rename entity' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeAddGroup">
            <summary>
            Gets the action code for 'add group' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.ActionCodeRenameGroup">
            <summary>
            Gets the action code for 'rename group' action.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer._clipboard">
            <summary>
            clipboard contains transferring data
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer._isClipboardCut">
            <summary>
            a value indicating cut or copy is executed
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.#ctor">
            <summary>
            Initializes a new instance of the TreeExplorer class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.Initialize(DHI.Solutions.Generic.IShell)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.AddBranch(DHI.Solutions.Generic.UI.TreeExplorerBranch)">
            <summary>
            Adds new branch to the tree.
            </summary>
            <param name="branch">Branch to add.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.ContainsBranch(DHI.Solutions.Generic.UI.TreeExplorerBranch)">
            <summary>
            Checks if tree contains given branch.
            </summary>
            <param name="branch">Branch to be checked.</param>
            <returns>True if branch is contained by the tree, false otherwise.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.RemoveBranch(DHI.Solutions.Generic.UI.TreeExplorerBranch)">
            <summary>
            Removes given branch from the tree.
            </summary>
            <param name="branch">Branch to be removed from the tree.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.GetNodes(System.Object,DHI.Solutions.Generic.IExplorerBranch)">
            <summary>
            Gets a list of tree nodes for given node tag object and given branch.
            </summary>
            <param name="nodeTag">Node tag for which to look in nodes.</param>
            <param name="branch">Branch under which to look for nodes.</param>
            <returns>List of nodes.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.GetNodes(System.Object)">
            <summary>
            Gets a list of tree nodes for given node tag.
            </summary>
            <param name="nodeTag">Node tag for which to look in nodes.</param>
            <returns>List of nodes.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.Refresh(DHI.Solutions.Generic.UI.TreeExplorerBranch)">
            <summary>
            Refreshes content of a tree branch.
            </summary>
            <remarks>
            Refresh can preserve state of the tree (expanded/collapsed) but to work correctly objects which
            are returned by perspective in IExplorerPerspectiveItem.Tag must return true when compared with object.Equals().
            </remarks>
            <param name="branch">Branch which should be refreshes</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.PrepareContextMenuNode(System.Collections.Generic.IList{System.Windows.Forms.TreeNode},System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Prepares given menu in context of nodes.
            </summary>
            <param name="nodes">Nodes for which to prepare context menu.</param>
            <param name="contextMenu">Context menu to prepare.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.PrepareContextMenuSpace(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Prepares menu in context of out-of-node space.
            </summary>
            <param name="contextMenu">Context menu to prepare.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.UpdateSelectable(DHI.Solutions.Generic.ISelectable)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer._ColorClipboardNodes(System.Drawing.Color)">
            <summary>
            Recover original fore color of nodes in current clipboard
            </summary>
            <param name="foreColor">the fore color</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.Serialize(System.Xml.XmlElement)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.Deserialize(System.Xml.XmlElement)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.OnModified(System.Boolean)">
            <summary>
            This method raises Modified event if it is not null
            </summary>
            <param name="modify">True - Modified, False - Unmodified</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeExplorer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer._treeControl">
            <summary>
            The DotNetMagic tree control.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeExplorer._mainPanel">
            <summary>
            The main panel of the tree explorer.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorer.QueryBuilder">
            <summary>
            Gets or sets the QueryBuilder control for the explorer.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorer.SelectedBranch">
            <summary>
            Gets the branch containing selected nodes.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorer.Branches">
            <summary>
            Gets the branches of the tree explorer.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorer.Icons">
            <summary>
            Gets or sets the image list used by tree nodes or actions.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorer.SelectableObjects">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeExplorer.IsModified">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.TreeExplorer.Modified">
            <inheritdoc />
        </member>
        <member name="T:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1">
            <summary>
            Represents a perspective where all entities are grouped together at the root level.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1">
            <summary>
            Represents an abstract perspective based on entities but not having a defined layout.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ExplorerPerspective">
            <summary>
            Represents abstract perspective.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ExplorerPerspective.ActionGroupCutCopyPasteDelete">
            <summary>
            Gets the action group for cut/copy/paste/delete actions.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ExplorerPerspective.ActionGroupNew">
            <summary>
            Gets the action group for all sort of 'new' actions. E.g. 'add new entity'.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ExplorerPerspective._shell">
            <summary>
            Reference to the Shell;
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.#ctor(DHI.Solutions.Generic.IShell)">
            <summary>
            Initializes a new instance of the ExplorerPerspective class.
            </summary>
            <param name="shell">Shell instance.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.GetChildren(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.GetParents(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.Supports(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.RefreshNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.GetNodeActions(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <summary>
            Gets a list of node actions for given nodes and given context data.
            </summary>
            <param name="nodeList">List of nodes for which actions are requested.</param>
            <param name="contextData">Context data (e.g. copied nodes or data dragged from other component).</param>
            <returns>List of actions.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.PrepareContextMenu(System.Windows.Forms.ContextMenuStrip,System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.CanSelectNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.GetSelectable(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.UpdateSelectable(DHI.Solutions.Generic.ISelectable)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.CreateClipboard(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Creates and returns clipboard object for given nodes.
            </summary>
            <param name="nodes">Nodes from which clipboard should be created.</param>
            <returns>Clipboard object.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.ClearClipboard(System.Windows.Forms.DataObject)">
            <summary>
            Clears clipboard object.
            </summary>
            <remarks>
            All data that were set during CreateClipboard call should be removed.
            </remarks>
            <param name="clipboard">Clipboard containing data to be removed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.RemoveFromClipboard(System.Windows.Forms.DataObject,System.Object)">
            <summary>
            Removes data associated with given object from clipboard.
            </summary>
            <remarks>
            All data associated with given object that were set during CreateClipboard call should be removed.
            </remarks>
            <param name="clipboard">Clipboard containing data to be removed.</param>
            <param name="itemTag">Object whose related data should be removed from clipboard.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.OnContentChanged">
            <summary>
            Raises ContentChanged event.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.OnItemAdded(DHI.Solutions.Generic.IExplorerPerspectiveItem)">
            <summary>
            Raises ItemAdded event.
            </summary>
            <param name="item">Item that was added.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.OnItemDeleted(DHI.Solutions.Generic.IExplorerPerspectiveItem)">
            <summary>
            Raises ItemDeleted event.
            </summary>
            <param name="item">Item that was deleted.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerPerspective.OnItemUpdated(DHI.Solutions.Generic.IExplorerPerspectiveItem)">
            <summary>
            Raises ItemUpdated event.
            </summary>
            <param name="item">Item that was updated.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspective.ImageKeyBranch">
            <summary>
            Gets the image key for a branch item.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspective.ImageIndexes">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspective.Name">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspective.Branch">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspective.TrackContentChanges">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ExplorerPerspective.ContentChanged">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ExplorerPerspective.ItemAdded">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ExplorerPerspective.ItemDeleted">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ExplorerPerspective.ItemUpdated">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspective.ManagerName">
            <summary>
            Gets the name of the manager within which perspective functions.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.#ctor(DHI.Solutions.Generic.IShell,DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <summary>
            Initializes a new instance of the BaseEntityExplorerPerspective class for the specified ListEntityTreeExplorerBranch.
            </summary>
            <param name="shell">Shell instance.</param>
            <param name="treeBranch">Tree branch for which BaseEntityExplorerPerspective should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.GetNodeActions(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.UpdateSelectable(DHI.Solutions.Generic.ISelectable)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.RefreshNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.Supports(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.RefreshData">
            <summary>
            Refreshes data contained in perspective to reflect data from data source.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.EntityList_Querying(System.Object,System.EventArgs)">
            <summary>
            Handles EntityList.Querying event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.EntityList_Queried(System.Object,System.EventArgs)">
            <summary>
            Handles EntityList.Queried event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1._CreateItem(DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <summary>
            Creates perspective item for tree branch.
            </summary>
            <param name="branch">Tree branch for which to create item.</param>
            <returns>Perspective item.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1._CreateItem(`0)">
            <summary>
            Creates perspective item for entity.
            </summary>
            <param name="entity">Entity for which to create item.</param>
            <returns>Perspective item.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.Entity_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles Entity.PropertyChanged event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.RegisterEntity(`0)">
            <summary>
            Registers entity with the perspective.
            </summary>
            <param name="entity">Entity which should be registered.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.UnregisterEntity(`0)">
            <summary>
            Unregisters entity from the perspective.
            </summary>
            <param name="entity">Entity which should be unregistered.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.SortEntityList(System.Collections.Generic.List{`0})">
            <summary>
            Sorts list of entities by name.
            </summary>
            <param name="list">List of entities to be sorted.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.ImageKeyEntity">
            <summary>
            Gets the image key for an entity item.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.EntitiesInitialized">
            <summary>
            Gets or sets a value indicating whether entities have been initialized.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.Branch">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.TrackContentChanges">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseEntityExplorerPerspective`1.Entities">
            <summary>
            Gets the list of entities registered with the perspective.
            </summary>
            <remarks>
            Entities should be added to the list or removed from it through RegisterEntity() and UnregisterEntity() methods.
            </remarks>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.#ctor(DHI.Solutions.Generic.IShell,DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <summary>
            Initializes a new instance of the FlatEntityExplorerPerspective class for the specified ListEntityTreeExplorerBranch.
            </summary>
            <param name="shell">Shell instance.</param>
            <param name="treeBranch">Tree branch for which FlatEntityExplorerPerspective should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.GetNodeActions(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.CanSelectNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.GetChildren(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.GetParents(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.EntityList_Deleted(System.Object,DHI.Solutions.Generic.EventArgs{`0})">
            <summary>
            Handles EntityList.Deleted event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1.EntityList_Added(System.Object,DHI.Solutions.Generic.EventArgs{`0})">
            <summary>
            Handles EntityList.Added event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.FlatEntityExplorerPerspective`1._CreateItem(DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <inheritdoc />
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CancelExplorerObjectEventArgs">
            <summary>
            Provides data for BaseExplorer cancellable object events.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CancelExplorerObjectEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the CancelExplorerObjectEventArgs class for the specified object and initial cancel value.
            </summary>
            <param name="obj">The object being subject of the event.</param>
            <param name="cancel">Initial cancel value.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CancelExplorerObjectEventArgs.Object">
            <summary>
            Gets the object being subject of the event.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.RemoteHostEditor">
            <summary>
            Class for RemoteHostEditor
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostEditor.#ctor(DHI.Solutions.Generic.IApplication)">
            <summary>
            Initializes a new instance of the RemoteHostEditor class
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.RemoteHostEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.RemoteHostEditor.ValidateJobService">
            <summary>
            Gets or sets the value of validate job service delegate
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.RemoteHostEditor.ShowScheduleForm">
            <summary>
            Gets or sets the value of show schedule form delegate
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.RemoteHostEditor.HostName">
            <summary>
            Gets or sets the value of HostName
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionGroupedAddGroup`1">
            <summary>
            Represents 'Add group' node action.
            </summary>
            <typeparam name="Group">Group type.</typeparam>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeAction">
            <summary>
            Represents node action for TreeExplorer.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeAction.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeAction class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.Nodes">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.ImageIndex">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.Text">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.Enabled">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.Visible">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.ActionCode">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.ActionGroup">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.ShortcutKeys">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.ReadOnlySafe">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.Execute">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeAction.ActionResult">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionGroupedAddGroup`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionGroupedAddGroup class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedAddGroup`1.GroupEntityList">
            <summary>
            Gets or sets IEntityList for Group type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.HostTreeExplorerBranch">
            <summary>
            Class for HostTreeExplorerBranch
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.#ctor(DHI.Solutions.Generic.IApplication)">
            <summary>
            Initializes a new instance of the HostTreeExplorerBranch class
            </summary>
            <param name="app">the application</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.ToString">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetAttributes">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetClassName">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetComponentName">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetConverter">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetDefaultEvent">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetDefaultProperty">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetEditor(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetEvents(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetEvents">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.RemoteHost">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.HostTreeExplorerBranch.Application">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ColumnWidthOption">
            <summary>
            This enums lists the available column size options
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ColumnWidthOption.DisplayedCells">
            <summary>
            Columns are sized to the width of the column header 
            and content of the visible cells
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ColumnWidthOption.Fill">
            <summary>
            Columns are sized such that they fill the width of the control.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomDataGridView">
            <summary>
            Extended DataGridView with only the properties that should be browsable to the user
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.#ctor">
            <summary>
            Initializes a new instance of the CustomDataGridView class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.OnTitleChanged">
            <summary>
            Raises the TitleChanged event
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.OnClipboardContentGetting">
            <summary>
            Raise the ClipboardContentGetting event
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.OnClipboardContentGot">
            <summary>
            Raise the ClipboardContentGot event
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.ToString">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.GetClipboardContent">
            <summary>
            When copy all cells of the data grid view, remove the header of rows. 
            </summary>
            <returns>DataObject removing the header of rows.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.SetColumnWidthOption(DHI.Solutions.Generic.UI.ColumnWidthOption)">
            <summary>
            This method is used to set the column width sizing options.
            </summary>
            <param name="columnWidthOption">The column width option</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.SetColumnFormat(System.Int32,DHI.Solutions.Generic.UI.ValueFormat,System.Int32)">
            <summary>
            Sets the column format
            </summary>
            <param name="columnIndex">the column index</param>
            <param name="format">the value format of column</param>
            <param name="digitCount">the decimal digits</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.GetColumnValueFormat(System.Int32)">
            <summary>
            Gets the value format of a column
            </summary>
            <param name="columnIndex">the column index</param>
            <returns>the column's value format</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridView.GetColumnDigitCount(System.Int32)">
            <summary>
            Gets the value of digit count property of a column
            </summary>
            <param name="columnIndex">the column index</param>
            <returns>the decimal digits of a column</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.BackGroundColor1">
            <summary>
            Gets or sets the background color of the grid
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.Title">
            <summary>
            Gets or sets the title of the grid
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.CustomAutoSizeColumnsMode">
            <summary>
            Gets or sets a value indicating how the rows in the table shall autoscale.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.SubTitle">
            <summary>
            Gets or sets the subtitle of the grid
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.TitleFont">
            <summary>
            Gets or sets the font of the main title
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.SubtitleFont">
            <summary>
            Gets or sets the font of the subtitle
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.DisplayName">
            <summary>
            Gets the display name of the grid
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.SelectedDataTableObjects">
            <summary>
            Gets or sets the observable collection
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CustomDataGridView.TitleChanged">
            <summary>
            Raised when the title of the grid changes
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CustomDataGridView.ClipboardContentGetting">
            <summary>
            Raised when the start gettting clip board content
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CustomDataGridView.ClipbordContentGot">
            <summary>
            Raised when has got clip board content
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.Order">
            <summary>
            Gets or sets the order in wich the data is sorted
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridView.IsRowDeleting">
            <summary>
            Gets or sets a value indicating whether a row is being deleted
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DotNetDataType">
            <summary>
            Enum for possible data types to be selected for an attribute.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.String">
            <summary>
            String data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.Double">
            <summary>
            Double data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.Single">
            <summary>
            Single data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.Int64">
            <summary>
            Int 64 data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.Int16">
            <summary>
            Int 16 data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.Int32">
            <summary>
            Int 32 data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.DateTime">
            <summary>
            Data time data type.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DotNetDataType.Boolean">
            <summary>
            Boolean data type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.AttributeBuilder">
            <summary>
            This user control class helps in building the attributes for dot net data types. This was basically created to create attributes to Create a New Faeture Class (GIS Manager).
            This user control class returns the datatable with data structure of the attributes as defined in the data grid control.
            The datagrid in the control contains 3 columns. First column has attribute name. Secone has datatype. Third has data type length.
            It is considered that when data type is string, then data type length should be > 0 at all times.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AttributeBuilder.#ctor">
            <summary>
            Initializes a new instance of the AttributeBuilder class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AttributeBuilder._IntializeComponent">
            <summary>
            Initial settings.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AttributeBuilder._SetDataTypeLengthColumnOfDataGridView(System.String,System.Int32,System.Int32)">
            <summary>
            Sets the datatype's length value in the 3rd column of grid data view.
            </summary>
            <param name="dataType">Datatype of the attribute as placed in 2nd column of grid data view.</param>
            <param name="rowIndex">Row index being operated and where the data type length is to be placed in 3rd column.</param>
            <param name="stringDataTypeLength">
            Data type length is available. 
            This is available when the datagrid is initially set for any features class's existing attributes.
            This is to be calculated when a new attribute is to be added.
            </param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.AttributeBuilder.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AttributeBuilder.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AttributeBuilder.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.AttributeBuilder.AttributeTable">
            <summary>
            Gets or sets the DataGridDataView with the datastructure of the datatable.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.AccountLogin">
            <summary>
            Summary description of AccountLogin
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.AccountLogin.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AccountLogin.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AccountLogin.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AccountLogin.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the AccountLogin class
            <param name="hostName">Host name used for the job.</param>
            <param name="userName">UserName of the account</param>
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.AccountLogin.UserName">
            <summary>
            Gets the value of account username
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.AccountLogin.Password">
            <summary>
            Gets the value of account password.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ShowAtStartUpAttribute">
            <summary>
            Attribute for showing visualizers at start up 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ShowAtStartUpAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ShowAtStartUpAttribute class with the value for start up
            </summary>
            <param name="showAtStartUp">The show at start up value</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ShowAtStartUpAttribute.Value">
            <summary>
            Gets a value indicating whether to show at start up
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.MenuItemAttribute">
            <summary>
            Attribute for menu items
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MenuItemAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MenuItemAttribute class.
            </summary>
            <param name="itemName">The name of the menu item</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MenuItemAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the MenuItemAttribute class using a resource string and corresponding resource provider.
            </summary>
            <param name="itemNameKey">The resource key for the menu item name</param>
            <param name="resourceManagerProvider">The type of resource manager</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MenuItemAttribute.ItemName">
            <summary>
            Gets the name of the menu item
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MenuItemAttribute.Action">
            <summary>
            Gets or sets the action to perform when clicking on the menu item
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MenuItemAttribute.Parameters">
            <summary>
            Gets or sets the parameters to pass when clicking the menu item
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MenuItemAttribute.ShortCut">
            <summary>
            Gets or sets the shortcut key to the item
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MenuItemAttribute.EnabledMethod">
            <summary>
            Gets or sets the name of a static method of visualizer class determining whether menu item is enabled
            </summary>
            <remarks>
            The method should accept IApplication object as its only argument and return boolean value
            </remarks>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.QueryBuilder">
            <summary>
            Query Builder user control
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.#ctor">
            <summary>
            Initializes a new instance of the QueryBuilder class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.BtnSearch_Click(System.Object,System.EventArgs)">
            <summary>
            Handles Search button click event
            </summary>
            <param name="sender">Search button</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.tbSearchQuery_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Dealing with the key down event
            </summary>
            <param name="sender">sender object</param>
            <param name="e">key event argument</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.FromString(DHI.Solutions.Generic.IQuery@,System.String)">
            <summary>
            Convert the displayed query string to QueryElement list
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.IsQueryString(System.String)">
            <summary>
            to analyze if a string is with format of query string
            </summary>
            <param name="sQueryString">query string</param>
            <returns>the result</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.SetWaterMarkText(System.String,System.String)">
            <summary>
            Sets watermark text for the control
            </summary>
            <param name="controlName">Control name</param>
            <param name="text">Watermark text</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.FindCriteria(System.String,System.Boolean)">
            <summary>
            Finds criteria in _criteriaList
            </summary>
            <param name="name">Criteria name</param>
            <param name="iscompleteSearch">True = search in _criteriaList. False = search in _visibleCriteriaList</param>
            <returns>QueryCriteria which matches the input arguments</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.FocusFirstVisibleCriteria">
            <summary>
            Sets focus to first visible criteria in the query builder.
            </summary>
            <returns>True or False</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.SetSearchCriteriaForcefully(System.String)">
            <summary>
            Sets the serch criteria when a empty time series is created from timeseries explorer.
            </summary>
            <param name="searchText">Series name which needs to be searched</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.QueryBuilder.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilder.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.QueryBuilder.tbSearchQuery">
            <summary>
            The instance of input box for query
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.QueryBuilder.QuickSearch">
            <summary>
            Event raised when QuickSearch is clicked
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.IsQueryBuilderEnabled">
            <summary>
            Gets a value indicating whether the query builder is aneabled and visible.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.QuickSearchKeyword">
            <summary>
            Gets or sets the keyword for quick searching
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.CollapsedHeight">
            <summary>
            Gets or sets collapsed height of query builder
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.CollapsedWidth">
            <summary>
            Gets or sets collapsed width of query builder
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.QueryBuilderElements">
            <summary>
            Gets or sets criteria list
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.IsExpanded">
            <summary>
            Gets or sets a value indicating whether query builder is expanded or not
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.DisplaySearchQuery">
            <summary>
            Gets a search Query which is displayed in tbSearchQuery
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.Query">
            <summary>
            Gets or sets search query
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.RecentQueryList">
            <summary>
            Gets or sets list of recent queries
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.IsAssociatedTimeSeries">
            <summary>
            Gets or sets a value indicating whether IsAssociatedTimeSeries check box is checked or not
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.IsSaveQueryEnabled">
            <summary>
            Gets or sets a value indicating whether save query is enabled.
            If save query is enabled then only query builder should serialize its saved queries content.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.IsModified">
            <summary>
            Gets or sets a value indicating whether some query has been saved or not
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilder.SavedQueries">
            <summary>
            Gets or sets a list of queries to be saved to project file
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.QueryBuilder.HeightChanged">
            <summary>
            Event for QueryBuilder height change
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.QueryBuilder.FilterAssociatedTimeSeries">
            <summary>
            Event for filtering Associated TimeSeries
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.QueryBuilder.Search">
            <summary>
            Event to start search based on the query criteria
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.QueryBuilder.SavedQueriesChanged">
            <summary>
            Event which is raised whenever a saved queries are changed
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.QueryBuilder.HeightChangedHandler">
            <summary>
            Delegate for QueryBuilder height changed
            </summary>
            <param name="sender">Sender of the callback</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DSSDateTimePicker">
            <summary>
            Class for DSSDateTimePicker
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSDateTimePicker.#ctor">
            <summary>
            Initializes a new instance of the DSSDateTimePicker class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSDateTimePicker.Disable">
            <summary>
            Disables DSSDateTimePicker control
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DSSDateTimePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSDateTimePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DSSDateTimePicker.Text">
            <summary>
            Gets or sets the Text of DateTime picker
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DSSDateTimePicker.Checked">
            <summary>
            Gets or sets a value indicating whether datetime picker checkbox is checked
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DSSDateTimePicker.Operator">
            <summary>
            Gets the operator
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DSSDateTimePicker.ValueChanged">
            <summary>
            Event which will be raised every time a value is changed in the DssDateTimePicker control
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DSSDateTimePicker.EnterKeyDown">
            <summary>
            Event raised when enter key is pressed
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DSSDateTimePicker.ValueChangeHandler">
            <summary>
            Handler for ValueChanged event
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DataTableDataView">
            <summary>
            A form which contains the CustomDataGridView control, ToolStripContainer and 2 labels.
            The context menu on the CustomDataGridView control header rows is given depending on the type of edit possible on the control.
            This form works on the basis of ISelfUpdateable object.
            This form considers that one Type of DataView (Map type, chart type etc.) can be contained in one CustomDataGridView control.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataTableDataView._shell">
            <summary>
            Application shell
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataTableDataView._dataSeriesPairListDictionary">
            <summary>
            Store the dataseries and its pairs.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataTableDataView._originalDataSeriesPairListDictionary">
            <summary>
            Store the dataseries and its pairs. Key is the id. Value is the dictionary of pairs.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataTableDataView._selectionSynchronizing">
            <summary>
            A flag indicates whether the selection is synchronizing.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.#ctor">
            <summary>
            Initializes a new instance of the DataTableDataView class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.FillSupportedTypes">
            <summary>
            Method to fill the supported type
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.Supports(System.Type)">
            <summary>
            Method to check the supported type
            </summary>
            <param name="type">Type to be check</param>
            <returns>Success result</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.Initialize(DHI.Solutions.Generic.IShell)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SetColumnWidthOption(DHI.Solutions.Generic.UI.ColumnWidthOption)">
            <summary>
            This method is used to set the column width sizing options.
            </summary>
            <param name="columnWidthOption">The column width option</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.OnReadOnlyPropertyChanged(System.String)">
            <summary>
            Raises the ReadOnlyPropertyChanged event
            </summary>
            <param name="propertyName">the event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.OnRedoEnableChanged(System.EventArgs)">
            <summary>
            Redo enable changed event
            </summary>
            <param name="e">event param containing the event data</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.OnUndoEnableChanged(System.EventArgs)">
            <summary>
            Undo enable changed event
            </summary>
            <param name="e">event param containing the event data</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.OnCaptionChanged(System.EventArgs)">
            <summary>
            Raise caption changed event
            </summary>
            <param name="e">event param containing the event data</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.OnDataTableSaved(System.Object)">
            <summary>
            Raise datatable saved event
            </summary>
            <param name="obj">the object to be saved</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._BeforeSaving(System.Object)">
            <summary>
            Method for doing logic before saving
            </summary>
            <param name="entityToBeSave">the entity to be saved</param>
            <returns>identify if allow to continue the saving</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SetDataTable(System.Collections.Generic.List{DHI.Solutions.Generic.ITabular})">
            <summary>
            Sets table data for data view using list of ITabular.
            </summary>
            <param name="tables">Tables containing data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.ClearDataTable">
            <summary>
            Clear data in the table.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SetDataTable(DHI.Solutions.Generic.ITabular)">
            <summary>
            Sets data table for the data view using ITabular.
            </summary>
            <param name="obj">ITabular containing data to set.</param>
            <returns>True if data has been merged, false otherwise.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._ManipulateDataTableContent(DHI.Solutions.Generic.DataTableContent)">
            <summary>
            Manipulate DataTableContent before merge into DataTable and DataGridView
            </summary>
            <param name="dataTableContent">Instance of DataTableContent</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._Tabular_DataSelected(System.Object,DHI.Solutions.Generic.SelectedItemChangedEventArgs)">
            <summary>
            Event handler for ITabular.DataSelected
            </summary>
            <param name="sender">event sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._Tabular_DataListSelected(System.Object,DHI.Solutions.Generic.SelectedItemsChangedEventArgs)">
            <summary>
            Event handler for ITabular.DataListSelected
            </summary>
            <param name="sender">the event sender</param>
            <param name="e">customer event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SetDataTable(DHI.Solutions.Generic.DataTableContent,System.Object)">
            <summary>
            Sets data table for the data view.
            </summary>
            <param name="dataTableContent">Data table content.</param>
            <param name="sourceObject">Source object.</param>
            <returns>Data table that was set.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SaveDataTable">
            <summary>
            Save all the changes to database
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._SaveDataSeries(DHI.Solutions.Generic.IDataSeries,System.Collections.Generic.IList{DHI.Solutions.Generic.IDataSeriesValuePair},System.Collections.Generic.IDictionary{System.Object,DHI.Solutions.Generic.IDataSeriesValuePair})">
            <summary>
            Save the data series after comparing the current and original value pairs.
            </summary>
            <param name="dataSeries">Dataseries to save.</param>
            <param name="currentValuePairs">Dataseries' current pairs.</param>
            <param name="originalValuePairs">Dataseries' original pairs.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.ClearUndoHistory">
            <summary>
            Clear undo history.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.HandleInMemoryObject(System.Object)">
            <summary>
            Method to handle the in-memory object
            </summary>
            <param name="obj">Object to be handled</param>
            <returns>Return the boolean value to indicate the success status</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.UndoRedoClick(System.Boolean)">
            <summary>
            Click undo or redo button
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.PushChangedValueToUndoStack(System.String,System.Int32)">
            <summary>
            Push changed value to the undo stack
            </summary>
            <param name="rowInfo">the row info, for time series it is the date time, for gis it is the id</param>
            <param name="columnIndex">the index of changed column</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._RefreshRelatedDataSeriesDataView(System.Int32)">
            <summary>
            Refresh all the loaded timeseries dataviews with the current timeseries whose value is changed.
            </summary>
            <param name="columnIndex">ColumIndex of the current DataView whose timeseries value has changed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._RefreshRelatedMapDataView">
            <summary>
            Refresh all the loaded map dataviews with the same feature layer.
            This is generic in and can be reused by other modules also.
            This can be reused by modules whose data is loaded in the dataview for only one entity.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SetCellBeforeEditValue(System.Object)">
            <summary>
            Store the cell value before edit
            </summary>
            <param name="value">the cell's old value</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.SaveUncommittedChanges">
            <summary>
            Opens a messagebox asking the user if uncommitted changes shall be saved. Returns the dialog result.
            </summary>
            <returns>Returns the dialog result (Yes/No/Cancel)</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.CancelUncommittedChanges">
            <summary>
            Cancels uncommitted changes.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView._DataViewControls_ControlRemoving(System.Object,DHI.Solutions.Generic.CancelControlEventArgs)">
            <summary>
            Called when the table view is closed by the user.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">event args</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.OnClosed(System.EventArgs)">
            <summary>
            When close, clear the data and unregister events.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataTableDataView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataTableDataView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataTableDataView._DataGridView">
            <summary>
            Customer datagrid view
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.DataTableWithInfoUpdate">
            <summary>
            Gets DataTableWithInfoUpdate
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.DataTableWithInfoDelete">
            <summary>
            Gets DataTableWithInfoDelete
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.Caption">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.Control">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.IconHandle">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.CanClose">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.DataViewResult">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.ToolStripContainer">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.SupportedTypes">
            <summary>
            Gets supported type for the DataTableDataView
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the dataview is readonly
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.DoSave">
            <summary>
            Gets or sets a value indicating whether the save functionalty should save the time series when pressing save. This is typically set to false if external functionality manages saving the data
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.UndoEnabled">
            <summary>
            Gets a value indicating whether undo button should be enabled
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.RedoEnabled">
            <summary>
            Gets a value indicating whether redo button should be enabled
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.SaveEnabled">
            <summary>
            Gets a value indicating whether save button should be enabled
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.CancelFormatting">
            <summary>
            Gets or sets a value indicating whether to raise the cell formatting event
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DataTableDataView.ReadOnlyPropertyChanged">
            <summary>
            Event raised when the readonly property is changed
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DataTableDataView.QualityFlagPropertyChanged">
            <summary>
            Event raised when the Quality flag property is changed
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DataTableDataView.RedoEnableChanged">
            <summary>
            Event raised when the enable property of redo tool is changed
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DataTableDataView.UndoEnableChanged">
            <summary>
            Event raised when the enable property of undo tool is changed
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DataTableDataView.CaptionChanged">
            <summary>
            Event raised when the caption is changed
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DataTableDataView.DataTableSaved">
            <summary>
            Event raised when the datatable is saved
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataTableDataView.CancelShowProperty">
            <summary>
            Gets or sets a value indicating whether cancel show property.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ToolStripDescription">
            <summary>
            Class that defines ToolStripDescription
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ToolStripDescription.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the ToolStripDescription class
            </summary>
            <param name="toolstripType">The type of the toolstrip</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ToolStripDescription.ToolStripType">
            <inheritdoc cref="P:DHI.Solutions.Generic.IToolStripDescription.ToolStripType"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ToolStripDescription.SupportedTypes">
            <inheritdoc cref="P:DHI.Solutions.Generic.IToolStripDescription.SupportedTypes"/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GripBounds">
            <summary>
            CodeProject.com "Simple pop-up control" "http://www.codeproject.com/cs/miscctrl/simplepopup.asp".
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GripBounds.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the GripBounds struct.
            </summary>
            <param name="clientRectangle">Client rectangle.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.ClientRectangle">
            <summary>
            Gets the value of the ClientRectangle.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.Bottom">
            <summary>
            Gets the value of the Bottom.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.BottomRight">
            <summary>
            Gets the value of the BottomRight.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.Top">
            <summary>
            Gets the value of the Top.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.TopRight">
            <summary>
            Gets the value of the TopRight.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.Left">
            <summary>
            Gets the value of the Left.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.BottomLeft">
            <summary>
            Gets the value of the BottomLeft.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.Right">
            <summary>
            Gets the value of the Right.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GripBounds.TopLeft">
            <summary>
            Gets the value of the TopLeft.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.RemoteHostUITypeEditor">
            <summary>
            UI type editor for remote hosts
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.RemoteHostUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.MessageForm">
            <summary>
            Dynamic dialog box with many answer cases
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._spanY">
            <summary>
            Vertical span in pixels between controls 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._spanX">
            <summary>
            Horizontal span in pixels between controls 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._buttonInternalMarginX">
            <summary>
            Span between button horizontal bound and its text
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._buttonInternalMarginY">
            <summary>
            Span between button vertical bound and its text
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._messageBoxWidth2HeightDesiredRegard">
            <summary>
            Desired proportion of the message label (not dialog window!) sides
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._maxWindowSize">
            <summary>
            Max size of window.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MessageForm.#ctor(System.String,System.String,System.Drawing.Color[],System.String[],System.Int32,System.String,System.Drawing.Icon)">
            <summary>
            Initializes a new instance of the MessageForm class
            </summary>
            <param name="caption">window caption</param>
            <param name="message">message information</param>
            <param name="button_colors">button colors</param>
            <param name="answers">array of possible answers</param>
            <param name="default_answer">default answer zero-based index</param>
            <param name="silent_box_text">silent check box text; if null then check box will not be displayed</param>
            <param name="icon">icon to be displayed</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MessageForm.#ctor(System.String,System.String,System.Drawing.Color[],System.String[],System.Int32,System.String,System.Drawing.Image)">
            <summary>
            Initializes a new instance of the MessageForm class
            </summary>
            <param name="caption">window caption</param>
            <param name="message">message information</param>
            <param name="button_colors">button colors</param>
            <param name="answers">array of possible answers</param>
            <param name="default_answer">default answer zero-based index</param>
            <param name="silent_box_text">silent check box text; if null then check box will not be displayed</param>
            <param name="image">image to be displayed as the message icon</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._answer">
            <summary>
            Zero-based index of chosen answer. Cancel = -1
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MessageForm.GetAnswer">
            <summary>
            Show MessageForm as a dialog box and get user's answer
            </summary>
            <returns>zero-based index of chosen answer. Cancel = -1</returns>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm._silent">
            <summary>
            Whether this answer should be repeated automatically
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MessageForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MessageForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MessageForm.Silent">
            <summary>
            Gets or sets a value indicating whether user's answer shall be automatically repeated 
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ListViewDataView">
            <summary>
            A form which contains the CustomListViewGridView control.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListViewDataView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListViewDataView._shell">
            <summary>
            Application shell
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.#ctor(DHI.Solutions.Generic.IShell)">
            <summary>
            Initializes a new instance of the ListViewDataView class
            </summary>
            <param name="shell">Shell of the list view.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.BuildListView(System.Collections.IList)">
            <summary>
            Gets the listview of the data view.
            </summary>
            <param name="entityList">List of entities to insert into the list view.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.BuildListView(DHI.Solutions.Generic.ITabular)">
            <summary>
            Gets the listview of the data view.
            </summary>
            <param name="tabularData">Tabular data to insert into the list view.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.Initialize(DHI.Solutions.Generic.IShell)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.OnCaptionChanged(System.EventArgs)">
            <summary>
            Raise caption changed event
            </summary>
            <param name="e">event param containing the event data</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.CanClose">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.DataViewResult">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.ToolStripContainer">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.Caption">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.Control">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.IconHandle">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ListViewDataView.CaptionChanged">
            <summary>
            Event raised when the caption is changed
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter">
            <summary>
            This class is an implementation of the 'IComparer' interface.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter._columnToSort">
            <summary>
            Specifies the column to be sorted
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter._orderOfSort">
            <summary>
            Specifies the order in which to sort (i.e. 'Ascending').
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter._objectCompare">
            <summary>
            Case insensitive comparer object
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter.#ctor">
            <summary>
            Initializes a new instance of the ListViewColumnSorter class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter.Compare(System.Object,System.Object)">
            <summary>
            This method is inherited from the IComparer interface.  It compares the two objects passed using a case insensitive comparison.
            </summary>
            <param name="x">First object to be compared</param>
            <param name="y">Second object to be compared</param>
            <returns>The result of the comparison. "0" if equal, negative if 'x' is less than 'y' and positive if 'x' is greater than 'y'</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter.SortColumn">
            <summary>
            Gets or sets the number of the column to which to apply the sorting operation (Defaults to '0').
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListViewDataView.ListViewColumnSorter.Order">
            <summary>
            Gets or sets the order of sorting to apply (for example, 'Ascending' or 'Descending').
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericToolForm">
            <summary>
            The GenericToolForm is a GenericForm formatted for use in UI tools.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericToolForm.#ctor">
            <summary>
            Initializes a new instance of the GenericToolForm class.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.GenericControls.GenericToolForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericToolForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericToolForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DSSComboBox">
            <summary>
            DSSComboBox class
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DSSComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSComboBox.#ctor">
            <summary>
            Initializes a new instance of the DSSComboBox class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DSSComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method raises the KeyDown event.
            </summary>
            <param name="e">KeyEventArgs of System.Windows.Forms</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DSSComboBox.Items">
            <summary>
            Gets or sets the Items of the comboBox
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DSSComboBox.SelectedIndex">
            <summary>
            Gets or sets Index of the selected comboBox item
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DSSComboBox.Text">
            <summary>
            Gets or sets Text of the selected comboBox item
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DSSComboBox.KeyDown">
            <summary>
            Event which is raised when KeyDown event occurs on the control
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.DSSComboBox.SelectedValueChanged">
            <summary>
            Event which is raised when Selected value in combobox changes
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ActionInfo">
            <summary>
            The ActionInfo class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ActionInfo.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ActionInfo class
            </summary>
            <param name="managerName">the manager name</param>
            <param name="commandName">the command name</param>
            <param name="enabled">a value indicating whether the action could be enabled</param>
            <param name="visible">a value indicating whether the action could be visible</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ActionInfo.ManagerName">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ActionInfo.CommandName">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ActionInfo.Enabled">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ActionInfo.Visible">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.VisualizerEventHandlerDescription">
            <summary>
            The visualizer eventhandler description class
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerEventHandlerDescription.Visualizer">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerEventHandlerDescription.Visualizer"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerEventHandlerDescription.Parameters">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerEventHandlerDescription.Visualizer"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerEventHandlerDescription.Action">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerEventHandlerDescription.Visualizer"/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.SystemErrorDialog">
            <summary>
            This dialog box appears when any system error is occured.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SystemErrorDialog.#ctor">
            <summary>
            Initializes a new instance of the SystemErrorDialog class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SystemErrorDialog.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SystemErrorDialog class.
            </summary>
            <param name="message">Message to be displayed to the user.</param>
            <param name="stack">Stack trace.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SystemErrorDialog.SetErrorDialogVisualStyle(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            Sets the visual style of the error dialog.
            </summary>
            <param name="style">visual style</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.SystemErrorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SystemErrorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.SystemErrorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.PropertyCategorizedEntityExplorerPerspective`1">
            <summary>
            Represents an abstract perspective based on entities grouped by a single property value.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1">
            <summary>
            Represents an abstract perspective based on entities grouped by abstract categories.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.#ctor(DHI.Solutions.Generic.IShell,DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <summary>
            Initializes a new instance of the CategorizedEntityExplorerPerspective class for the specified ListEntityTreeExplorerBranch.
            </summary>
            <param name="shell">Shell instance.</param>
            <param name="treeBranch">Tree branch for which CategorizedEntityExplorerPerspective should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.GetChildren(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.GetParents(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.Supports(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.CanSelectNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1._GetCategoryValues(`0)">
            <summary>
            Gets category values for given entity.
            </summary>
            <param name="entity">Entity for which to get categories.</param>
            <returns>Category value</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1._GetCategoryDescription(System.Object)">
            <summary>
            Gets description for a category.
            </summary>
            <param name="category">Category for which to get description.</param>
            <returns>Category description</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1._CreateCategoryItem(System.Object)">
            <summary>
            Creates perspective item for category.
            </summary>
            <param name="category">Category for which to create item.</param>
            <returns>Perspective item.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1._CreateItem(DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.RefreshData">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.RegisterCategory(System.Object)">
            <summary>
            Registers category.
            </summary>
            <param name="category">Category to register.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.RegisterCategory(System.Object,System.Int32)">
            <summary>
            Registers category at a given position.
            </summary>
            <param name="category">Category to register.</param>
            <param name="index">Index of a position at which to register category.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.UnregisterCategory(System.Object)">
            <summary>
            Unregisters category.
            </summary>
            <param name="category">Category to unregister.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.EntityList_Deleted(System.Object,DHI.Solutions.Generic.EventArgs{`0})">
            <summary>
            Event handler for Deleted event on EntityList.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.EntityList_Added(System.Object,DHI.Solutions.Generic.EventArgs{`0})">
            <summary>
            Event handler for Added event on EntityList.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.AddEntityToCategories(`0,System.Object[])">
            <summary>
            Adds entity to given categories in perspective.
            </summary>
            <param name="entity">Entity to add.</param>
            <param name="categories">Categories under which entity should be added.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.DeleteEntity(`0)">
            <summary>
            Deletes entity from perspective.
            </summary>
            <param name="entity">Entity to delete.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.DeleteEntity(`0,System.Object[])">
            <summary>
            Deletes entity from given categories in perspective.
            </summary>
            <param name="entity">Entity to delete.</param>
            <param name="categories">Categories from which to delete entity.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.ImageKeyCategory">
            <summary>
            Gets the image key for a category item.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CategorizedEntityExplorerPerspective`1.Categories">
            <summary>
            Gets dictionary containing entities grouped by cateogries.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyCategorizedEntityExplorerPerspective`1.#ctor(DHI.Solutions.Generic.IShell,DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <summary>
            Initializes a new instance of the PropertyCategorizedEntityExplorerPerspective class for the specified ListEntityTreeExplorerBranch.
            </summary>
            <param name="shell">Shell instance.</param>
            <param name="treeBranch">Tree branch for which PropertyCategorizedEntityExplorerPerspective should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyCategorizedEntityExplorerPerspective`1.GetNodeActions(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyCategorizedEntityExplorerPerspective`1.Entity_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionCodeRenameGroup`1">
            <summary>
            Represents 'rename group' node action.
            </summary>
            <typeparam name="Entity">Entity type.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionCodeRenameGroup`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionCodeRenameGroup class.
            </summary>
            <param name="nodes">Node list.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionCodeRenameGroup`1.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.MultiSelectTreeView">
            <summary>
            Extended treview control to allow multiselect functionality
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.#ctor">
            <summary>
            Initializes a new instance of the MultiSelectTreeView class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnGotFocus(System.EventArgs)">
            <summary>
            The focus event handler
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            The mouse down event handler
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            The mouse up event handler
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            The item drag event handler
            </summary>
            <param name="e">Item drag event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            The  before select event handler
            </summary>
            <param name="e">Before select event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            The  after select event handler
            </summary>
            <param name="e">After select event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            The key down event handler
            </summary>
            <param name="e">Key event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            Raises the NodeTextChanged event.
            </summary>
            <param name="e">TreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            Overrides On Handle Created.
            </summary>
            <param name="e"> An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.ClearSelection">
            <summary>
            clear the selected nodes.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.Deselect(System.Windows.Forms.TreeNode)">
            <summary>
            Deselects a node. This method does not deselect the other nodes
            </summary>
            <param name="node">The node to deselect</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.DeselectAll">
            <summary>
            Deselect all the currently selected TreeNodes.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.SelectNode(System.Windows.Forms.TreeNode)">
            <summary>
             Select the provided node.
            </summary>
            <param name="n">daddsad aadsad</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.SelectNode(System.Windows.Forms.TreeNode,System.Boolean,System.Boolean)">
            <summary>
            Select the provided node using shift/ctrl key semantics.
            </summary>
            <param name="node">Node to be selected.</param>
            <param name="shift">Should act as if the shift key is pressed.</param>
            <param name="ctrl">Should act as if the control key is pressed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.OnAfterSelectionChanged">
            <summary>
            Raises the AfterSelectionChanged event.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView.SafeInvoke(System.Action)">
            <summary>
            Safely invoke at the multi-thread environment.
            </summary>
            <param name="action">Action to be executed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.MultiSelectTreeView._SelectNode(System.Windows.Forms.TreeNode)">
            <summary>
             Select the provided node.
            </summary>
            <param name="node">daddsad aadsad</param>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.MultiSelectTreeView.TreeNodeChanged">
            <summary>
            The tree node changed event handler
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.MultiSelectTreeView.NodeLabelEditChanged">
            <summary>
            Node text changed event.
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.MultiSelectTreeView.AfterSelectionChanged">
            <summary>
            Occurs when after a change in selection has occured.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MultiSelectTreeView.SelectedNodes">
            <summary>
            Gets or sets nodes that are selected.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MultiSelectTreeView.SelectedNode">
            <summary>
            Gets or sets nodes that are selected.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MultiSelectTreeView.CurrentNode">
            <summary>
            Gets the currently selected node
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.MultiSelectTreeView.ContextMenuNode">
            <summary>
            Gets or sets the current context menu
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.MultiSelectTreeView.TreeNodeChangedHandle">
            <summary>
            The tree node changed delegate
            </summary>
            <param name="sender">The event sender</param>
            <param name="args">The event arguments</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ExceptionErrorDialog">
            <summary>
            This dialog box appears when any crash error is occured.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ExceptionErrorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExceptionErrorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExceptionErrorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExceptionErrorDialog.#ctor(DHI.Solutions.Generic.IShell)">
            <summary>
            Initializes a new instance of the ExceptionErrorDialog class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.MessageLevel">
            <summary>
            Enumeration of message levels
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageLevel.General">
            <summary>
            The normal message level
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageLevel.Debug">
            <summary>
            Message level to help in debugging
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.MessageLevel.Eventlogging">
            <summary>
            Message level to write all information, warning into event logger
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DssMessage">
            <summary>
            Static class for DssMessage
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowWarning(System.String,System.String)">
            <summary>
            Shows warning message to the user.
            </summary>
            <param name="message">Message to be shown to the user.</param>
            <param name="caption">Caption of the message box.</param>
            <returns>DialogResult.OK or DialogResult.Cancel</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowConfirmation(System.String,System.String)">
            <summary>
            Shows confirmation message to the user.
            </summary>
            <param name="message">Message to be shown to the user.</param>
            <param name="caption">Caption of the message box.</param>
            <returns>DialogResult.Yes or DialogResult.No</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowConfirmation(System.String,System.String,System.Int32)">
            <summary>
            Shows confirmation message to the user.
            </summary>
            <param name="message">Message to be shown to the user.</param>
            <param name="caption">Caption of the message box.</param>
            <param name="defaultButton">The default button to highlight. 1= Yes, 2 = No</param>
            <returns>DialogResult.Yes or DialogResult.No</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowInformation(System.String,System.String)">
            <summary>
            Shows information message to the user.
            </summary>
            <param name="message">Message to be shown to the user.</param>
            <param name="caption">Caption of the message box.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowSystemError(System.String,System.String)">
            <summary>
            Shows system error message to the user.
            </summary>
            <param name="errormessage">Message to be shown to the user.</param>
            <param name="stacktrace">Stack trace.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowExceptionError(System.String,System.Exception)">
            <summary>
            Shows exception message to the user.
            </summary>
            <param name="errormessage">Message to be shown to the user.</param>
            <param name="exception">Excetion to show.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowSystemShutDownException(System.String,System.Exception)">
            <summary>
            Shows system shut down exception message to the user.
            </summary>
            <param name="errormessage">Message to be shown to the user.</param>
            <param name="exception">Excetion to show.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowCustomMessage(System.String,System.String,System.String[])">
            <summary>
            Shows custom message to the user.
            </summary>
            <param name="errormessage">Message to be shown to the user.</param>
            <param name="title">Caption of the message box.</param>
            <param name="options">Array of options.</param>
            <returns>Number of the option selected 
            e.g. if first radio button is selected then 0 will be returned.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.ShowUserError(System.String,System.String)">
            <summary>
            The User Input Error dialog is a simple messagebox with a single OK button
            and an information icon. It can be used to inform the user that some invalid 
            input has been provided. In general, however, the UI should prevent the user
            from typing in invalid data. 
            </summary>
            <param name="message">Message to be shown to the user.</param>
            <param name="caption">Caption of the message box.</param>
            <returns>error => 0</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DssMessage.Initialize(DHI.Solutions.Generic.IShell)">
            <summary>
            Initializes the DssMessage
            </summary>
            <param name="shell">Instance of the <see cref="T:DHI.Solutions.Generic.IShell"/></param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DssMessage.Owner">
            <summary>
            Gets or sets the value of Owner
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DssMessage.Information">
            <summary>
            Gets or sets the Information
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DssMessage.ApplicationMessageLevel">
            <summary>
            Gets or sets the application message level.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DssMessage.Style">
            <summary>
            Gets or sets the Style.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DssMessage.Shell">
            <summary>
            Gets the reference to the <see cref="T:DHI.Solutions.Generic.IShell"/>
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericFileBrowseButton">
            <summary>
            The GenericFileBrowseButton is a formatted button with a default file open icon.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericFileBrowseButton.#ctor">
            <summary>
            Initializes a new instance of the GenericFileBrowseButton class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Explorer.NodeActionCopy">
            <summary>
            Represents 'Copy' node action.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Explorer.NodeActionCopy.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionCopy class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ContextMenuEventArgs">
            <summary>
            Provides data for context menu events.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ContextMenuEventArgs.#ctor(System.Object,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Initializes a new instance of the ContextMenuEventArgs class for the specified owner and context menu.
            </summary>
            <param name="owner">Owner of the context menu.</param>
            <param name="contextMenu">Context menu that is the subject of the event.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ContextMenuEventArgs.Owner">
            <summary>
            Gets the owner of the context menu.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ContextMenuEventArgs.ContextMenu">
            <summary>
            Gets the context menu that is the subject of the event.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.QueryBuilderElement">
            <summary>
            Query Criteria class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilderElement.#ctor(System.String,System.Type,DHI.Solutions.Generic.UI.TypeOfValueControl)">
            <summary>
            Initializes a new instance of the QueryBuilderElement class
            </summary>
            <param name="name">Name of the criteria</param>
            <param name="dataType">Datatype of the criteria</param>
            <param name="valueControlType">Control type</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilderElement.#ctor(System.String,System.Type,DHI.Solutions.Generic.UI.TypeOfValueControl,System.Boolean)">
            <summary>
            Initializes a new instance of the QueryBuilderElement class
            </summary>
            <param name="name">Name of the criteria</param>
            <param name="dataType">Datatype of the criteria</param>
            <param name="valueControlType">Control type</param>
            <param name="isvisible">Flag to set visibility of the criteria</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilderElement.#ctor(System.String,System.Type,DHI.Solutions.Generic.UI.TypeOfValueControl,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the QueryBuilderElement class
            </summary>
            <param name="name">Name of the criteria</param>
            <param name="dataType">Datatype of the criteria</param>
            <param name="valueControlType">Value Control type of the criteria</param>
            <param name="comboBoxList">List of Combobox values</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilderElement.#ctor(System.String,System.Type,DHI.Solutions.Generic.UI.TypeOfValueControl,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the QueryBuilderElement class
            </summary>
            <param name="name">Name of the criteria</param>
            <param name="dataType">Datatype of the criteria</param>
            <param name="valueControlType">Value Control type of the criteria</param>
            <param name="comboBoxList">List of Combobox values</param>
            <param name="isvisible">Flag to set visibility of the criteria</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilderElement.#ctor(System.String,System.Type,DHI.Solutions.Generic.UI.TypeOfValueControl,System.Collections.Generic.List{System.String},System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the QueryBuilderElement class
            </summary>
            <param name="name">Name of the criteria</param>
            <param name="dataType">Datatype of the criteria</param>
            <param name="valueControlType">Value Control type of the criteria</param>
            <param name="comboBoxList">List of Combobox values</param>
            <param name="isvisible">Flag to set visibility of the criteria</param>
            <param name="initialValue">Initital value of the control.
            For TextBox it should be a string like : "abc"
            For DSSComboBox it should be a string like : "abc"
            for DSSDateTimePicker it should be like : symbol#DateTime
            where symbol can be greater than sign, less than or less than equals or greater than equals sign.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.Name">
            <summary>
            Gets or sets name of the criteria
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.DataType">
            <summary>
            Gets or sets the dataType of the criteria
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.IsVisible">
            <summary>
            Gets or sets a value indicating whether visiblility of the criteria is true or not
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.ValueControlType">
            <summary>
            Gets or sets the valueControl type of the criteria
            Its default value = InputBox
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.ComboBoxList">
            <summary>
            Gets or sets ComboBoxList
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.InitialValue">
            <summary>
            Gets or sets the InitialValue for the criteria.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderElement.ValidOperatorList">
            <summary>
            Gets the list of valid operators for control that is will be in associated control also.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TypeOfValueControl">
            <summary>
            Enumeration of type of value controls
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TypeOfValueControl.InputBox">
            <summary>
            Input box type
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TypeOfValueControl.ComboBox">
            <summary>
            Combobox type
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TypeOfValueControl.DateTimePicker">
            <summary>
            Datetime picker type
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Explorer.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.CategorizedEntityExplorerPerspective_UnrecognizedCategory">
            <summary>
              Looks up a localized string similar to Category {0} is not recognized by the perspective..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.ExplorerPerspective_ChildTypeNotSupported">
            <summary>
              Looks up a localized string similar to Can not get parents of type {0}. Type is not recognized by ExplorerPerspective..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.ExplorerPerspective_Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.ExplorerPerspective_Cut">
            <summary>
              Looks up a localized string similar to Cut.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.ExplorerPerspective_ParentTypeNotSupported">
            <summary>
              Looks up a localized string similar to Can not get children of type {0}. Type is not recognized by ExplorerPerspective..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.ExplorerPerspective_Refresh">
            <summary>
              Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.FlatEntityExplorerPerspective_AddNewEntity">
            <summary>
              Looks up a localized string similar to Add new {0}.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.FlatEntityExplorerPerspective_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.FlatEntityExplorerPerspective_DeleteWarning">
            <summary>
              Looks up a localized string similar to Are you sure that you want to delete all selected items?.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.FlatEntityExplorerPerspective_NewEntityName">
            <summary>
              Looks up a localized string similar to New{0}.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.FlatEntityExplorerPerspective_Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.FlatEntityExplorerPerspective_Rename">
            <summary>
              Looks up a localized string similar to Rename.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_AddNewGroup">
            <summary>
              Looks up a localized string similar to Add new group.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_CopyFullPath">
            <summary>
              Looks up a localized string similar to Copy full path.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_Delete">
            <summary>
              Looks up a localized string similar to Delete.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_GroupNotRecognized">
            <summary>
              Looks up a localized string similar to Group with id {0} is not recognized by perspective..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_NewGroupName">
            <summary>
              Looks up a localized string similar to New group.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_ShowEmptyGroups">
            <summary>
              Looks up a localized string similar to Show empty groups.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.GroupedEntityExplorerPerspective_ViewHiddenGroup">
            <summary>
              Looks up a localized string similar to To view added group please select &quot;Show empty groups&quot; option..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.TreeExplorer_BranchAlreadyAdded">
            <summary>
              Looks up a localized string similar to Branch has already been added to TreeExplorer..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.TreeExplorer_BranchNotContained">
            <summary>
              Looks up a localized string similar to Branch does not belong to TreeExplorer..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.TreeExplorer_CantDrawBranchWitoutPerspective">
            <summary>
              Looks up a localized string similar to Branch can not be drawn without a perspective set..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.TreeExplorer_PerspectiveMustReturnOneRoot">
            <summary>
              Looks up a localized string similar to Perspective must return exactly one root element..
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.TreeExplorer_RefreshView">
            <summary>
              Looks up a localized string similar to Refresh view.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.TreeExplorer_ViewBy">
            <summary>
              Looks up a localized string similar to View by.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Explorer.Resources.Warning_ActiveData">
            <summary>
              Looks up a localized string similar to Active data view has wrong type: {0}.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Explorer.NodeActionDrag">
            <summary>
            Represents 'Drag' node action.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Explorer.NodeActionDrag.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionDrag class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Attributes.NamespaceDoc">
            <summary>
            <para>
            The <see cref="N:DHI.Solutions.Generic.UI.Attributes"/> namespace contains UI related attributes.
            </para>
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.VisualizerDescription">
            <summary>
            The visualizer description class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.VisualizerDescription.#ctor(System.Type,DHI.Solutions.Generic.IApplication)">
            <summary>
            Initializes a new instance of the VisualizerDescription class
            </summary>
            <param name="visualizertype">The type of the visualizer</param>
            <param name="app">Application object</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerDescription.VisualizerType">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerDescription.VisualizerType"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerDescription.SupportedTypes">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerDescription.SupportedTypes"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerDescription.MenuItems">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerDescription.MenuItems"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerDescription.MaxNoRequiredInputItems">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerDescription.MaxNoRequiredInputItems"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerDescription.MinNoRequiredInputItems">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerDescription.MinNoRequiredInputItems"/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.VisualizerDescription.ShowAtStartUp">
            <inheritdoc cref="P:DHI.Solutions.Generic.IVisualizerDescription.ShowAtStartUp"/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.UIUtilities">
            <summary>
            This class a generic utility class to be used for UI projects
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.UIUtilities.MatchTreeStyle(Crownwood.DotNetMagic.Common.VisualStyle)">
            <summary>
            This method matches the visual style with the DotnetMagic tree control styles
            </summary>
            <param name="style">VisualStyle to be set</param>
            <returns>TreeControlStyles of the DotNetMagic tree control</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.UIUtilities.TestWinUserCredentials(System.String,System.String,System.String)">
            <summary>
            Utility method to test if the windows credentials for a remote host are valid or not.
            </summary>
            <param name="hostName">Host name.</param>
            <param name="winUserName">Windows user name.</param>
            <param name="winUserPassword">Windows user password.</param>
            <returns>True - valid user credentials, False - invalid user credentials.</returns>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NativeMethods">
            <summary>
            CodeProject.com "Simple pop-up control" "http://www.codeproject.com/cs/miscctrl/simplepopup.asp".
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TreeControlExt">
            <summary>
            Extended tree control from DotNetMagic to allow sorting and uniqueness verifying
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TreeControlExt.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.#ctor">
            <summary>
            Initializes a new instance of the TreeControlExt class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the TreeControlExt class
            </summary>
            <param name="container">Parent container</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.OnAfterLabelEdit(Crownwood.DotNetMagic.Controls.Node,System.String@)">
            <summary>
            Method called after label edited.
            </summary>
            <param name="node">tree node being edited</param>
            <param name="sLabel">label text</param>
            <returns>Indicates whether the editing is successfully</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt._VerifyUniqueness(Crownwood.DotNetMagic.Controls.Node,System.String@)">
            <summary>
            Verify the uniqueness of the label
            </summary>
            <param name="node">tree node that is verified</param>
            <param name="sLabel">label text of tree node</param>
            <returns>Indicates whether the label is unique.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.SortingTree">
            <summary>
            To sort all the nodes in ascending order according to the names of same level
            </summary>
            <returns>returns always true</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt.SortingTree(System.Boolean,System.Boolean)">
            <summary>
            To sort all the nodes according to the names of same level
            </summary>
            <param name="bAscending">True of False, and False to sorting in descending order</param>
            <param name="bGroupSortedByTagType">The nodes are grouped by the type of the tag.</param>
            <returns>returns always true</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TreeControlExt._SortingOneLevelNodes(Crownwood.DotNetMagic.Controls.NodeCollection,System.Boolean,System.Boolean)">
            <summary>
            To sort all the nodes in one same level
            </summary>
            <param name="nodeCollection">Nodes in one same level</param>
            <param name="bAscending">True of False, and False to sorting in descending order</param>
            <param name="bGroupSortedByTagType">The nodes are grouped by the type of the tag.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TreeControlExt.UniqueInSameLevel">
            <summary>
            Gets or sets a value indicating whether the label of the new node should be unique
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomTextBoxDialog">
            <summary>
            This class defines the custome texk box dialog
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomTextBoxDialog.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomTextBoxDialog.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomTextBoxDialog.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomTextBoxDialog.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CustomTextBoxDialog class.
            </summary>
            <param name="labelName">Name of the label</param>
            <param name="dialogTitle">Dilog box title</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomTextBoxDialog._OkBtn_Click(System.Object,System.EventArgs)">
            <summary>
            Processes click event of Ok button
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Arguments passed with the event</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomTextBoxDialog._CancelBtn_Click(System.Object,System.EventArgs)">
            <summary>
            Processes Clik event of Cancel button.
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Argumenst passed with the event</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomTextBoxDialog.ShowDialogWindow">
            <summary>
            Shows the dialog window.
            </summary>
            <returns>return the result</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomTextBoxDialog.InputText">
            <summary>
            Gets a value indicating the input string provided by user.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomTextBoxDialog.NameComboBoxObject">
            <summary>
            Gets the combo box  reference where names need to be filled.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericTextBox">
            <summary>
            The GenericTextBox class is a formatted TextBox. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTextBox.#ctor">
            <summary>
            Initializes a new instance of the GenericTextBox class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionGroupedPasteMove`2">
            <summary>
            Represents 'Paste - move' node action for grouped entity.
            </summary>
            <typeparam name="Entity">Entity type.</typeparam>
            <typeparam name="Group">Group type.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionGroupedPasteMove`2.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <summary>
            Initializes a new instance of the NodeActionGroupedPasteMove class for specified node list and clipboard object.
            </summary>
            <param name="nodes">Node list.</param>
            <param name="clipboard">Clipboard object.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedPasteMove`2.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedPasteMove`2.GroupEntityList">
            <summary>
            Gets or sets IGroupedEntityList for Group type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CancelContextMenuEventArgs">
            <summary>
            Provides data for cancellable context menu events.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CancelContextMenuEventArgs.#ctor(System.Object,System.Windows.Forms.ContextMenuStrip,System.Boolean)">
            <summary>
            Initializes a new instance of the CancelContextMenuEventArgs class for the specified owner, context menu and cancel value.
            </summary>
            <param name="owner">Owner of the context menu.</param>
            <param name="contextMenu">Context menu that is the subject of the event.</param>
            <param name="cancel">Intial cancel value.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CancelContextMenuEventArgs.Owner">
            <summary>
            Gets the owner of the context menu.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CancelContextMenuEventArgs.ContextMenu">
            <summary>
            Gets the context menu that is the subject of the event.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ValueFormat">
            <summary>
            The value format of data grid column
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ValueFormat.FloatingFormat">
            <summary>
            default format, no need to define the digit count
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ValueFormat.FixedFormat">
            <summary>
            format for normal value
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ValueFormat.ExponentialFormat">
            <summary>
            format for exponential notation
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomDataGridColumn">
            <summary>
            The extended DataGridViewColumn with only the properties that should be browsable to the user
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.#ctor">
            <summary>
            Initializes a new instance of the CustomDataGridColumn class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.ToString">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetAttributes">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetClassName">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetComponentName">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetConverter">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetDefaultEvent">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetDefaultProperty">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetEditor(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetEvents(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetEvents">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridColumn.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
            <param name="propertyName">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridColumn.DisplayName">
            <summary>
            Gets the display name of the column
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridColumn.Width1">
            <summary>
            Gets or sets the width of the column 
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridColumn.ColumnFormat">
            <summary>
            Gets or sets the value format of a data grid column
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridColumn.DigitCount">
            <summary>
            Gets or sets the value of digit count for a data grid column
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridColumn.DataGridViewColumn">
            <summary>
            Gets or sets the base DataGridViewColumn object
            </summary>
        </member>
        <member name="E:DHI.Solutions.Generic.UI.CustomDataGridColumn.PropertyChanged">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Attributes.ActionCodeAttribute">
            <summary>
            Attribute for Action Code
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Attributes.ActionCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ActionCodeAttribute class
            </summary>
            <param name="actionCode">action code</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Attributes.ActionCodeAttribute.GetClassActionCode(System.Type)">
            <summary>
            get the action code of type
            </summary>
            <param name="type">type of the class</param>
            <returns>action code of class type</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.Attributes.ActionCodeAttribute.ActionCode">
            <summary>
            Gets or sets the action code
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ActionInfoList">
            <summary>
            The ActionInfoList class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ActionInfoList.GetAllActionInfo(DHI.Solutions.Generic.IShell,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ActionInfoList.GetActionInfo(DHI.Solutions.Generic.IShell,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ListGridDataView">
            <summary>
            A form which contains the CustomListViewGridView control.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListGridDataView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.ListGridDataView._shell">
            <summary>
            Application shell
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.#ctor(DHI.Solutions.Generic.IShell)">
            <summary>
            Initializes a new instance of the ListGridDataView class
            </summary>
            <param name="shell">Shell of the list view.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.BuildListView(System.Collections.IList)">
            <summary>
            Gets the listview of the data view.
            </summary>
            <param name="entityList">List of entities to insert into the list view.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.BuildListView(DHI.Solutions.Generic.ITabular)">
            <summary>
            Gets the listview of the data view.
            </summary>
            <param name="tabularData">Tabular data to insert into the list view.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.Initialize(DHI.Solutions.Generic.IShell)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ListGridDataView.OnCaptionChanged(System.EventArgs)">
            <summary>
            Raise caption changed event
            </summary>
            <param name="e">event param containing the event data</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListGridDataView.CanClose">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListGridDataView.DataViewResult">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListGridDataView.ToolStripContainer">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListGridDataView.Caption">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListGridDataView.Control">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ListGridDataView.IconHandle">
            <inheritdoc />
        </member>
        <member name="E:DHI.Solutions.Generic.UI.ListGridDataView.CaptionChanged">
            <summary>
            Event raised when the caption is changed
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionGroupedPasteCopy`2">
            <summary>
            Represents 'Paste - copy' node action for grouped entity.
            </summary>
            <typeparam name="Entity">Entity type.</typeparam>
            <typeparam name="Group">Group type.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionGroupedPasteCopy`2.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <summary>
            Initializes a new instance of the NodeActionGroupedPasteCopy class for specified node list and clipboard object.
            </summary>
            <param name="nodes">Node list.</param>
            <param name="clipboard">Clipboard object.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionGroupedPasteCopy`2._AddEntity(`0,`0)">
            <summary>
            Add cloned entity to data table
            </summary>
            <param name="cloned">the cloned entity</param>
            <param name="originalEntity">the original entity</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedPasteCopy`2.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedPasteCopy`2.GroupEntityList">
            <summary>
            Gets or sets IGroupedEntityList for Group type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionFlatAddEntity`1">
            <summary>
            Represents 'Add entity' node action.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionFlatAddEntity`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionFlatAddEntity class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionFlatAddEntity`1.CreateNew">
            <summary>
            Creates new entity.
            </summary>
            <returns>New entity.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionFlatAddEntity`1.EntityName">
            <summary>
            Gets or sets name of entity.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionFlatAddEntity`1.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Explorer.NodeActionCut">
            <summary>
            Represents 'Cut' node action.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Explorer.NodeActionCut.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionCut class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2">
            <summary>
            Represents a perspective where all entities are grouped according to a group hierarchy.
            </summary>
            <typeparam name="Entity">Grouped entity class.</typeparam>
            <typeparam name="Group">Group class.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.#ctor(DHI.Solutions.Generic.IShell,DHI.Solutions.Generic.IGroupedListEntityTreeExplorerBranch{`0,`1})">
            <summary>
            Initializes a new instance of the GroupedEntityExplorerPerspective class for the specified GroupedListEntityTreeExplorerBranch.
            </summary>
            <param name="shell">Shell instance.</param>
            <param name="treeBranch">Tree branch for which GroupedEntityExplorerPerspective should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.PrepareContextMenu(System.Windows.Forms.ContextMenuStrip,System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.GetNodeActions(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.GetChildren(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.GetParents(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.Supports(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.RefreshNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.RefreshData">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.EntityList_Added(System.Object,DHI.Solutions.Generic.EventArgs{`0})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.EntityList_Deleted(System.Object,DHI.Solutions.Generic.EventArgs{`0})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.Entity_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.GroupEntityList_Deleted(System.Object,DHI.Solutions.Generic.EventArgs{`1})">
            <summary>
            Handles GroupEntityList.Deleted event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.GroupEntityList_Added(System.Object,DHI.Solutions.Generic.EventArgs{`1})">
            <summary>
            Handles GroupEntityList.Added event.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2._CreateItem(DHI.Solutions.Generic.IListEntityTreeExplorerBranch{`0})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2._CreateItem(`1)">
            <summary>
            Creates perspective item for a group.
            </summary>
            <param name="group">Group for which to create item.</param>
            <returns>Perspective item.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.UpdateSelectable(DHI.Solutions.Generic.ISelectable)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2._MarkNonEmptyGroups(System.Object,System.Boolean)">
            <summary>
            Marks all groups on the path as non-empty.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2._MarkEmptyGroups(System.Object,System.Boolean)">
            <summary>
            Marks groups on the path as empty until a group with entities is found
            should be called when someone removes entity from a group.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2._EnsureGroup(System.Object)">
            <summary>
            Makes sure that group exists, if not tries to get it from database
            and create whole path until known group.
            Fires events when new groups are being added to the list of currently
            known ones but when doing so doesn't take into account any entities
            that might be attached to those groups. This has to be done in additional step.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.ImageKeyGroup">
            <summary>
            Gets the image key for a group item.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.ShowEmptyGroup">
            <summary>
            Gets or sets a value indicating whether empty groups should be visible.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GroupedEntityExplorerPerspective`2.Branch">
            <inheritdoc />
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ExplorerObjectEventArgs">
            <summary>
            Provides data for BaseExplorer object events.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.ExplorerObjectEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the ExplorerObjectEventArgs class for the specified object.
            </summary>
            <param name="obj">The object being subject of the event.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerObjectEventArgs.Object">
            <summary>
            Gets the object being subject of the event.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.BaseToolStrip">
            <summary>
            The BaseToolStrip class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.#ctor">
            <summary>
            Initializes a new instance of the BaseToolStrip class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.Initialize(DHI.Solutions.Generic.IShell)">
            <summary>
            Method that gets called during the initialization of the control
            </summary>
            <param name="shell">Shell reference</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.GetEmbeddedControl``1">
            <summary>
            This method gets a Control of type T from the DataView that contains this
            toolstrip. If the DataView contains more than one control of type T, only
            the first found is returned.
            -
            The method first looks for a toolstrip container, and if one is found, it
            looks for a control of type T in the ContentPanel. Otherwise, it looks for a parent control
            in the dataview i.e. a case for scenario manager toolstrips.
            </summary>
            <typeparam name="T">The type of control to look for</typeparam>
            <returns>The first control of type T that is found, or null</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.EnableDisableToolStripButton``1(System.Boolean)">
            <summary>
            This method enables or disables all toolstrip buttons of the specified type. The condition
            is that the type shall inherit ToolStripButton. The method is for example used to
            enable/disable Paste buttons depending on the content of the Clipboard.
            </summary>
            <typeparam name="T">The ToolStripButton type (must inherit ToolStripButton)</typeparam>
            <param name="enabled">True if the button shall be enabled.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.UnCheckAllToolStripsInCurrentView">
            <summary>
            Method to uncheck all items in all ToolStrips in the CurrentDataView
            To be used when the user clicks a button in this toolstrip that will
            require all other toggle buttons in other toolstrips to be unchecked.
            -
            (Should be moved to the DataView classes)
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.GetActionInfoList(DHI.Solutions.Generic.IShell,System.String)">
            <summary>
            Get the action information list of specific manager
            </summary>
            <param name="shell">the IShell object</param>
            <param name="managerName">the manager name</param>
            <returns>the list of action info</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.GetActionInfo(System.Collections.Generic.IList{DHI.Solutions.Generic.IActionInfo},System.String,System.String)">
            <summary>
            Get action info in stored in database
            </summary>
            <param name="actionInfoList">All actions about specify manager</param>
            <param name="actionName">action name of command</param>
            <param name="managerName">manager name</param>
            <returns>action info</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.BaseToolStrip.SetToolStripItemStatus(DHI.Solutions.Generic.IShell,System.String)">
            <summary>
            Set toolstrip item enable and visible property
            </summary>
            <param name="shell">shell instance</param>
            <param name="managerName">Manager name of toolstrip belonged to</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.Caption">
            <summary>
            Gets or sets the Caption value
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.Control">
            <summary>
            Gets or sets the control value
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.IconHandle">
            <summary>
            Gets the Iconhandle value
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.Description">
            <summary>
            Gets the toolstrip description
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.ToolStripItemCollection">
            <summary>
            Gets the ToolStripItemCollection.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.MenuItemCollection">
            <summary>
            Gets the MenuItemCollection.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.BaseToolStrip.CurrentDataView">
            <summary>
            Gets or sets the Current dataview value
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.InformationPopupForm">
            <summary>
            Form for the information popup
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.InformationPopupForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.InformationPopupForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.InformationPopupForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.InformationPopupForm.GetCursorPos(System.Drawing.Point@)">
            <summary>
            Provides cursor position.
            </summary>
            <param name="point">Point which holds the cursor position.</param>
            <returns>True - success, False - failure.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.InformationPopupForm.#ctor">
            <summary>
            Initializes a new instance of the InformationPopupForm class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.InformationPopupForm.ShowInformation(System.Windows.Forms.Form,System.String,System.String,System.Int32)">
            <summary>
            Shows information to the user.
            </summary>
            <param name="parentForm">Form which wants to show the information.</param>
            <param name="message">Message to be displayed.</param>
            <param name="caption">Caption of the message box.</param>
            <param name="index">Index number</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.InformationPopupForm.SetLocationOfInformation(System.Windows.Forms.Form)">
            <summary>
            Set the location to the lower-right of the parent form
            </summary>
            <param name="parentForm">the parent form</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericCheckBox">
            <summary>
            The GenericCheckBox is a formatted checkbox.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericCheckBox.#ctor">
            <summary>
            Initializes a new instance of the GenericCheckBox class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomDataGridCell">
            <summary>
            The extended DataGridViewCell class with only the properties that should be browsable to the user
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.#ctor">
            <summary>
            Initializes a new instance of the CustomDataGridCell class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.ToString">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetAttributes">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetClassName">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetComponentName">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetConverter">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetDefaultEvent">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetDefaultProperty">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetEditor(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetEvents(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetEvents">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetProperties(System.Attribute[])">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetProperties">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomDataGridCell.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridCell.BackColor1">
            <summary>
            Gets or sets the background color of the cell
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridCell.QualityFlag">
            <summary>
            Gets or sets the quality flag of the cell
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridCell.DisplayName">
            <summary>
            Gets the display name when the cell is selected
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridCell.FilterPropertyName">
            <summary>
            Gets or sets the filtered property name list
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomDataGridCell.DataGridViewCell">
            <summary>
            Gets or sets the base cell object
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.PropertyFlag">
            <summary>
            The class represents the static property flags
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.GetPropertyDescription">
            <summary>
            Gets all quality flag descriptions corresponding to a data series
            </summary>
            <returns>the list of quality flag description</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.GetPropertyDescription(System.Drawing.Color)">
            <summary>
            Gets the flag description corresponding to a color
            </summary>
            <param name="flagColor">input flag color</param>
            <returns>the flag description</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.GetPropertyDescription(System.Int32)">
            <summary>
            Gets the quality flag description corresponding to the flag value
            </summary>
            <param name="flagValue">the input quality flag value</param>
            <returns>the quality flag description</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.GetPropertyColor(System.String)">
            <summary>
            Gets the quality flag color corresponding to a description
            </summary>
            <param name="description">the input quality flag description</param>
            <returns>the quality flag color</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.GetPropertyColor(System.Int32)">
            <summary>
            Gets the quality flag color corresponding to the flag value
            </summary>
            <param name="flagValue">the input quality flag value</param>
            <returns>the quality flag color</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.GetPropertyFlagValue(System.String)">
            <summary>
            Gets all quality flag values corresponding to a data series
            </summary>
            <returns>the list of quality flag value</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.SetPropertyFlagInfo(System.Collections.Generic.Dictionary{System.Int32,System.Object})">
            <summary>
            Sets the quality flag information
            </summary>
            <param name="flagInfo">the input quality flag information</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.SetPropertyFlagDescriptionList(System.Collections.Generic.Dictionary{System.Int32,System.String})">
            <summary>
            Sets the quality flag description list which contains description information of the flag
            </summary>
            <param name="propertyFlagDecriptionList">the input quality flag description list</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.PropertyFlag.SetPropertyFlagColorList(System.Collections.Generic.Dictionary{System.Int32,System.Drawing.Color})">
            <summary>
            Sets the quality flag color list which contains color information of the flag
            </summary>
            <param name="propertyFlagColorList">the input quality flag color list</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.PropertyFlag.Count">
            <summary>
            Gets the count of quality flag
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.CustomMessageBox">
            <summary>
            Show MessageForm with predefined features
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomMessageBox._showMessagesInTurn">
            <summary>
            Defines how message boxes will be showed in multithreaded environment:
            TRUE: strongly in turn one after another even if sent from different threads;
            FALSE: simultaneously if sent from different threads - like .NET MessageBox does;
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomMessageBox._caption">
            <summary>
            Caption that will be used by default. By default it is the application's product name.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomMessageBox._showInTaskbar">
            <summary>
            Whether the message box is displayed in the Windows taskbar.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomMessageBox._silentBoxText">
            <summary>
            Text for repeat-my-answer-in-the future checkbox
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.CustomMessageBox._buttonColors">
            <summary>
            Default colors that buttons will be colored to.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Ok(System.String,System.Drawing.Icon,System.String)">
            <summary>
            Shows a message box with OK button and a given icon
            </summary>
            <param name="caption">The caption of the message box.</param>
            <param name="icon">The icon of the message box.</param>
            <param name="message">The message to be displayed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Ok(System.Drawing.Icon,System.String)">
            <summary>
            Shows a message box with OK button and a given icon
            </summary>
            <param name="icon">The icon of the message box.</param>
            <param name="message">The message to be displayed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Error(System.Exception)">
            <summary>
            Shows a message box with error information and OK button for an exception
            </summary>
            <param name="e">The exception containing the message and stack trace to show</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Error(System.String)">
            <summary>
            Shows a message box with error information and OK button
            </summary>
            <param name="message">The message to be displayed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Inform(System.String)">
            <summary>
            Shows an informatiional message box with OK button.
            </summary>
            <param name="message">The message to be dislayed.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.YesNo(System.String,System.Drawing.Icon,System.String,System.Boolean)">
            <summary>
            Shows a message box with Yes and No buttons.
            </summary>
            <param name="caption">The caption to be displayed.</param>
            <param name="icon">The icon to be displayed.</param>
            <param name="question">The question/message</param>
            <param name="default_yes">If Yes button shall be default selected button.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.YesNo(System.Drawing.Icon,System.String)">
            <summary>
            Shows a message box with Yes and No buttons.
            </summary>
            <param name="icon">The icon to be displayed.</param>
            <param name="question">The question/message.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.YesNo(System.String,System.String,System.Boolean)">
            <summary>
            Shows a message box with Yes and No buttons.
            </summary>
            <param name="caption">The caption to be displayed.</param>
            <param name="question">The question/message.</param>
            <param name="default_yes">If Yes button shall be default selected button.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.YesNo(System.String)">
            <summary>
            Shows a message box with Yes and No buttons.
            </summary>
            <param name="question">The question/message.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.YesNo(System.String,System.Boolean)">
            <summary>
            Shows a message box with Yes and No buttons.
            </summary>
            <param name="question">The question/message.</param>
            <param name="default_yes">If Yes button shall be default selected button.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Ask(System.String,System.Int32,System.String[])">
            <summary>
            Shows a message box with a question.
            </summary>
            <param name="message">Message to be displayed.</param>
            <param name="default_answer">The default answer.</param>
            <param name="answers">The possible answers.</param>
            <returns>int value from Show.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Ask(System.Boolean@,System.String,System.Int32,System.String[])">
            <summary>
            Shows a message box with a question.
            </summary>
            <param name="silent_box">Out bool value for silent box option.</param>
            <param name="message">Message to be displayed.</param>
            <param name="default_answer">The default answer.</param>
            <param name="answers">The possible answers.</param>
            <returns>int value from Show.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Show(System.String,System.Drawing.Icon,System.String,System.Int32,System.String[])">
            <summary>
            Method displays the MessageBox.
            </summary>
            <param name="caption">Caption of the message box.</param>
            <param name="icon">Icon to be displayed.</param>
            <param name="message">Message to be displayed.</param>
            <param name="default_answer">The default answer.</param>
            <param name="answers">The possible answers.</param>
            <returns>int value of Message box dialog.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Show(System.Drawing.Icon,System.String,System.Int32,System.String[])">
            <summary>
            Method displays the MessageBox.
            </summary>
            <param name="icon">Icon to be displayed.</param>
            <param name="message">Message to be displayed.</param>
            <param name="default_answer">The default answer.</param>
            <param name="answers">The possible answers.</param>
            <returns>int value of Message box dialog.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Show(System.String,System.Drawing.Icon,System.Boolean@,System.String,System.Int32,System.String[])">
            <summary>
            Method displays the MessageBox.
            </summary>
            <param name="caption">Caption of the message box.</param>
            <param name="icon">Icon to be displayed.</param>
            <param name="silent_box">The silient box option to be displayed or not.</param>
            <param name="message">Message to be displayed.</param>
            <param name="default_answer">The default answer.</param>
            <param name="answers">The possible answers.</param>
            <returns>int value of Message box dialog.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.CustomMessageBox.Show(System.Drawing.Icon,System.Boolean@,System.String,System.Int32,System.String[])">
            <summary>
            Method displays the MessageBox.
            </summary>
            <param name="icon">Icon to be displayed.</param>
            <param name="silent_box">The silient box option to be displayed or not.</param>
            <param name="message">Message to be displayed.</param>
            <param name="default_answer">The default answer.</param>
            <param name="answers">The possible answers.</param>
            <returns>int value of Message box dialog.</returns>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.CustomMessageBox.NextTime_ButtonColors">
            <summary>
            Gets or sets the value of NextTime_ButtonColors.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericLabel">
            <summary>
            Initializes a new instance of the GenericLabel class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericLabel.#ctor">
            <summary>
            Initializes a new instance of the GenericLabel class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3">
            <summary>
            Represents an abstract perspective based on entities grouped by their associated entities.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
            <typeparam name="AssociatedEntity">Associated entity class.</typeparam>
            <typeparam name="AssociationEntity">Entity representing association between entity and associated entity.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.#ctor(DHI.Solutions.Generic.IShell,DHI.Solutions.Generic.IAssociatedEntityTreeExplorerBranch{`0,`1,`2})">
            <summary>
            Initializes a new instance of the AssociatedEntityExplorerPerspective class for the specified ListEntityTreeExplorerBranch.
            </summary>
            <param name="shell">Shell instance.</param>
            <param name="treeBranch">Tree branch for which AssociatedEntityExplorerPerspective should be created.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.CanSelectNodes(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3._GetEntityId(`2)">
            <summary>
            Gets id of an entity related to association entity.
            </summary>
            <param name="associationEntity">Association entity.</param>
            <returns>Entity id.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3._GetAssociatedEntityId(`2)">
            <summary>
            Gets id of an associated entity related to association entity.
            </summary>
            <param name="associationEntity">Association entity.</param>
            <returns>Associated entity id.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.AssociationEntityList_Deleted(System.Object,DHI.Solutions.Generic.EventArgs{`2})">
            <summary>
            Event handler for Deleted event on AssociationEntityList.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.AssociationEntityList_Added(System.Object,DHI.Solutions.Generic.EventArgs{`2})">
            <summary>
            Event handler for Added event on AssociationEntityList.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3._GetCategoryValues(`0)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3._GetCategoryDescription(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.RegisterCategory(System.Object,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.UnregisterCategory(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.RefreshData">
            <inheritdoc />
        </member>
        <member name="P:DHI.Solutions.Generic.UI.AssociatedEntityExplorerPerspective`3.AssociationToEntityJoinCondition">
            <summary>
            Gets string representing join condition in a query for association entities related to an entity.
            </summary>
            <remarks>
            For example: "TimeSeries.Id"
            </remarks>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell">
            <summary>
            Provides a drop-down filter list in a DataGridViewColumnHeaderCell.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.dropDownListBox">
            <summary>
            The ListBox used for all drop-down lists. 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.filters">
            <summary>
            A list of filters available for the owning column stored as 
            formatted and unformatted string values. 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.selectedFilterValue">
            <summary>
            The drop-down list filter value currently in effect for the owning column. 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.currentColumnFilter">
            <summary>
            The complete filter string currently in effect for the owning column. 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.filtered">
            <summary>
            Indicates whether the DataGridView is currently filtered by the owning column.  
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.#ctor(System.Windows.Forms.DataGridViewColumnHeaderCell)">
            <summary>
            Initializes a new instance of the DataGridViewColumnHeaderCell 
            class and sets its property values to the property values of the 
            specified DataGridViewColumnHeaderCell.
            </summary>
            <param name="oldHeaderCell">The DataGridViewColumnHeaderCell to copy property values from.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.#ctor">
            <summary>
            Initializes a new instance of the DataGridViewColumnHeaderCell 
            class. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.Clone">
            <summary>
            Creates an exact copy of this cell.
            </summary>
            <returns>An object that represents the cloned DataGridViewAutoFilterColumnHeaderCell.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.OnDataGridViewChanged">
            <summary>
            Called when the value of the DataGridView property changes
            in order to perform initialization that requires access to the 
            owning control and column. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.VerifyDataSource">
            <summary>
            Confirms that the data source, if it has been set, is a BindingSource.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.HandleDataGridViewEvents">
            <summary>
            Add handlers to various DataGridView events, primarily to invalidate 
            the drop-down button bounds, hide the drop-down list, and reset 
            cached filter values when changes in the DataGridView require it.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the user scrolls horizontally.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A ScrollEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnDisplayIndexChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the column display index changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnWidthChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Invalidates the drop-down button bounds when a column width changes
            in the DataGridView control. A width change in any column of the 
            control has the potential to affect the drop-down button location, 
            depending on the current horizontal scrolling position and whether
            the changed column is to the left or right of the current column. 
            It is easier to invalidate the button in all cases. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewColumnEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnHeadersHeightChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the height of the column headers changes.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            Invalidates the drop-down button bounds when the size of the DataGridView changes.
            This prevents a painting issue that occurs when the right edge of the control moves 
            to the right and the control contents have previously been scrolled to the right.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_DataBindingComplete(System.Object,System.Windows.Forms.DataGridViewBindingCompleteEventArgs)">
            <summary>
            Invalidates the drop-down button bounds, hides the drop-down 
            filter list, if it is showing, and resets the cached filter values
            if the filter has been removed. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewBindingCompleteEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_DataSourceChanged(System.Object,System.EventArgs)">
            <summary>
            Verifies that the data source meets requirements, invalidates the 
            drop-down button bounds, hides the drop-down filter list if it is 
            showing, and resets the cached filter values if the filter has been removed. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.ResetDropDown">
            <summary>
            Invalidates the drop-down button bounds and hides the filter
            list if it is showing.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.ResetFilter">
            <summary>
            Resets the cached filter values if the filter has been removed.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DataGridView_ColumnSortModeChanged(System.Object,System.Windows.Forms.DataGridViewColumnEventArgs)">
            <summary>
            Throws an exception when the column sort mode is changed to Automatic.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A DataGridViewColumnEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <summary>
            Paints the column header cell, including the drop-down button. 
            </summary>
            <param name="graphics">The Graphics used to paint the DataGridViewCell.</param>
            <param name="clipBounds">A Rectangle that represents the area of the DataGridView that needs to be repainted.</param>
            <param name="cellBounds">A Rectangle that contains the bounds of the DataGridViewCell that is being painted.</param>
            <param name="rowIndex">The row index of the cell that is being painted.</param>
            <param name="cellState">A bitwise combination of DataGridViewElementStates values that specifies the state of the cell.</param>
            <param name="value">The data of the DataGridViewCell that is being painted.</param>
            <param name="formattedValue">The formatted data of the DataGridViewCell that is being painted.</param>
            <param name="errorText">An error message that is associated with the cell.</param>
            <param name="cellStyle">A DataGridViewCellStyle that contains formatting and style information about the cell.</param>
            <param name="advancedBorderStyle">A DataGridViewAdvancedBorderStyle that contains border styles for the cell that is being painted.</param>
            <param name="paintParts">A bitwise combination of the DataGridViewPaintParts values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.OnMouseDown(System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>
            Handles mouse clicks to the header cell, displaying the 
            drop-down list or sorting the owning column as appropriate. 
            </summary>
            <param name="e">A DataGridViewCellMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.SortByColumn">
            <summary>
            Sorts the DataGridView by the current column if AutomaticSortingEnabled is true.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.dropDownListBoxShowing">
            <summary>
            Indicates whether dropDownListBox is currently displayed 
            for this header cell. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.ShowDropDownList">
            <summary>
            Displays the drop-down filter list. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.HideDropDownList">
            <summary>
            Hides the drop-down filter list. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.SetDropDownListBoxBounds">
            <summary>
            Sets the dropDownListBox size and position based on the formatted 
            values in the filters dictionary and the position of the drop-down 
            button. Called only by ShowDropDownListBox.  
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.HandleDropDownListBoxEvents">
            <summary>
            Adds handlers to ListBox events for handling mouse
            and keyboard input.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.UnhandleDropDownListBoxEvents">
            <summary>
            Removes the ListBox event handlers. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Adjusts the filter in response to a user selection from the drop-down list. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.lostFocusOnDropDownButtonClick">
            <summary>
            Indicates whether the drop-down list lost focus because the
            user clicked the drop-down button. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_LostFocus(System.Object,System.EventArgs)">
            <summary>
            Hides the drop-down list when it loses focus. 
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DropDownListBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handles the ENTER and ESC keys.
            </summary>
            <param name="sender">The object that raised the event.</param>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.PopulateFilters">
            <summary>
            Populates the filters dictionary with formatted and unformatted string
            representations of each unique value in the column, accounting for all 
            filters except the current column's. Also adds special filter options. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.FilterWithoutCurrentColumn(System.String)">
            <summary>
            Returns a copy of the specified filter string after removing the part that filters the current column, if present. 
            </summary>
            <param name="filter">The filter string to parse.</param>
            <returns>A copy of the specified filter string without the current column's filter.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.UpdateFilter">
            <summary>
            Updates the BindingSource.Filter value based on a user selection
            from the drop-down filter list. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.RemoveFilter(System.Windows.Forms.DataGridView)">
            <summary>
            Removes the filter from the BindingSource bound to the specified DataGridView. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the BindingSource to unfilter.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.GetFilterStatus(System.Windows.Forms.DataGridView)">
            <summary>
            Gets a status string for the specified DataGridView indicating the 
            number of visible rows in the bound, filtered BindingSource, or 
            string.Empty if all rows are currently visible. 
            </summary>
            <param name="dataGridView">The DataGridView bound to the 
            BindingSource to return the filter status for.</param>
            <returns>A string in the format "x of y records found" where x is 
            the number of rows currently displayed and y is the number of rows 
            available, or string.Empty if all rows are currently displayed.</returns>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.dropDownButtonBoundsValue">
            <summary>
            The bounds of the drop-down button, or Rectangle.Empty if filtering 
            is disabled or the button bounds need to be recalculated. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.InvalidateDropDownButtonBounds">
            <summary>
            Sets dropDownButtonBoundsValue to Rectangle.Empty if it isn't already empty. 
            This indicates that the button bounds should be recalculated. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.SetDropDownButtonBounds">
            <summary>
            Sets the position and size of dropDownButtonBoundsValue based on the current 
            cell bounds and the preferred cell height for a single line of header text. 
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.AdjustPadding(System.Int32)">
            <summary>
            Adjusts the cell padding to widen the header by the drop-down button width.
            </summary>
            <param name="newDropDownButtonPaddingOffset">The new drop-down button width.</param>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.currentDropDownButtonPaddingOffset">
            <summary>
            The current width of the drop-down button. This field is used to adjust the cell padding.  
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.filteringEnabledValue">
            <summary>
            Indicates whether filtering is enabled for the owning column. 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.automaticSortingEnabledValue">
            <summary>
            Indicates whether automatic sorting is enabled. 
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.dropDownListBoxMaxLinesValue">
            <summary>
            The maximum number of lines in the drop-down list. 
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DropDownListBoxMaxHeightInternal">
            <summary>
            Gets the actual maximum height of the drop-down list, in pixels.
            The maximum height is calculated from the DropDownListBoxMaxLines 
            property value, but is limited to the available height of the 
            DataGridView control. 
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DropDownButtonBounds">
            <summary>
            The bounds of the drop-down button, or Rectangle.Empty if filtering
            is disabled. Recalculates the button bounds if filtering is enabled
            and the bounds are empty.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.FilteringEnabled">
            <summary>
            Gets or sets a value indicating whether filtering is enabled.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.AutomaticSortingEnabled">
            <summary>
            Gets or sets a value indicating whether automatic sorting is enabled for the owning column. 
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.DropDownListBoxMaxLines">
            <summary>
            Gets or sets the maximum number of lines to display in the drop-down filter list. 
            The actual height of the drop-down list is constrained by the DataGridView height. 
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.FilterListBox">
            <summary>
            Represents a ListBox control used as a drop-down filter list
            in a DataGridView control.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.#ctor">
            <summary>
            Initializes a new instance of the FilterListBox class.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Indicates that the FilterListBox will handle (or ignore) all 
            keystrokes that are not handled by the operating system. 
            </summary>
            <param name="keyData">A Keys value that represents the keyboard input.</param>
            <returns>true in all cases.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.DataGridViewAutoFilterColumnHeaderCell.FilterListBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes a keyboard message directly, preventing it from being
            intercepted by the parent DataGridView control.
            </summary>
            <param name="m">A Message, passed by reference, that 
            represents the window message to process.</param>
            <returns>true if the message was processed by the control;
            otherwise, false.</returns>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionRenameEntity`1">
            <summary>
            Represents 'Rename entity' node action.
            </summary>
            <typeparam name="Entity">Entity type.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionRenameEntity`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionRenameEntity class for specified node list.
            </summary>
            <param name="nodes">Node list.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionRenameEntity`1.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionGroupedDelete`2">
            <summary>
            Represents 'Delete' node action for grouped entity.
            </summary>
            <typeparam name="Entity">Entity type.</typeparam>
            <typeparam name="Group">Group type.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionGroupedDelete`2.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionGroupedDelete class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedDelete`2.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedDelete`2.GroupEntityList">
            <summary>
            Gets or sets IGroupedEntityList for Group type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GroupedListEntityTreeExplorerBranch`2">
            <summary>
            Tree explorer branch containing grouped entities.
            </summary>
            <typeparam name="Entity">Entity type represented by the branch.</typeparam>
            <typeparam name="Group">Group type represented by the branch.</typeparam>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GroupedListEntityTreeExplorerBranch`2.GroupEntityList">
            <inheritdoc />
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TextBoxWithDefault">
            <summary>
            Extended TextBox to set default text
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TextBoxWithDefault.#ctor">
            <summary>
            Initializes a new instance of the TextBoxWithDefault class
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TextBoxWithDefault.OnEnter(System.EventArgs)">
            <summary>
            Occurs when the control became the active control of the form
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TextBoxWithDefault.OnLeave(System.EventArgs)">
            <summary>
            Occurs when the control is no longer the active control of the form
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TextBoxWithDefault.ResetToDefault">
            <summary>
            Reset to default setting
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TextBoxWithDefault.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TextBoxWithDefault.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TextBoxWithDefault.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TextBoxWithDefault.DefaultText">
            <summary>
            Gets or sets a default text
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.QueryBuilderHeightChangedEventArgs">
            <summary>
            QueryBuilder height changed event arguments
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.QueryBuilderHeightChangedEventArgs.#ctor(System.Boolean,System.Collections.Generic.IList{DHI.Solutions.Generic.UI.QueryBuilderElement})">
            <summary>
            Initializes a new instance of the QueryBuilderHeightChangedEventArgs class
            </summary>
            <param name="isexpanding">Flag to show if queryBuilder is expanding or not</param>
            <param name="criteriaList">Criteria list</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderHeightChangedEventArgs.IsExpanding">
            <summary>
            Gets or sets a value indicating whether queryBuilder is expanding or not
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.QueryBuilderHeightChangedEventArgs.CriteriaList">
            <summary>
            Gets or sets criteria list
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionFlatPasteCopyEntity`1">
            <summary>
            Represents 'Paste copy entity' node action.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionFlatPasteCopyEntity`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode},System.Windows.Forms.IDataObject)">
            <summary>
            Initializes a new instance of the NodeActionFlatPasteCopyEntity class for specified nodes and clipboard object.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
            <param name="clipboard">Clipboard object.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionFlatPasteCopyEntity`1.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionFlatDeleteEntity`1">
            <summary>
            Represents 'Delete entity' node action.
            </summary>
            <typeparam name="Entity">Entity class.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionFlatDeleteEntity`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionFlatDeleteEntity class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionFlatDeleteEntity`1.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.ExplorerPerspectiveItem">
            <summary>
            Represents a perspective item.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspectiveItem.ImageIndex">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspectiveItem.Name">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspectiveItem.Tag">
            <inheritdoc/>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.ExplorerPerspectiveItem.IsLeaf">
            <inheritdoc/>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TabularTypeEditorUI">
            <summary>
            Class for the editing of the tabular type data.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.TabularTypeEditorUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TabularTypeEditorUI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TabularTypeEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TabularTypeEditorUI.#ctor(DHI.Solutions.Generic.Tabular,System.Boolean)">
            <summary>
            Initializes a new instance of the TabularTypeEditorUI class.
            </summary>
            <param name="table">Data of type tabular.</param>
            <param name="readOnly">Flag to show if the data grid should be readonly or not.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TabularTypeEditorUI.EditedTable">
            <summary>
            Gets the value of the edited table.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.TabularTypeEditorUI.IsTableEdited">
            <summary>
            Gets a value indicating whether table is edited or not.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.TabularTypeEditor">
            <summary>
            Editor for tabular data types.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TabularTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Handler method which handles value change of the property through property grid.
            </summary>
            <param name="context">Type descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to be set.</param>
            <returns>Value which has been set in the object.</returns>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.TabularTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Provides editor dialog style information.
            </summary>
            <param name="context">Type descriptor context.</param>
            <returns>UI type editor dialog style.</returns>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericTitleBar">
            <summary>
            This control shall be used as title bars in the relevant views and controls.
            </summary>
        </member>
        <member name="F:DHI.Solutions.Generic.UI.GenericControls.GenericTitleBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTitleBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTitleBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericTitleBar.#ctor">
            <summary>
            Initializes a new instance of the GenericTitleBar class. The title control shall be 
            used as title bar in the relevant views and controls.
            </summary>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.GenericControls.GenericTitleBar.Title">
            <summary>
            Gets or sets the Title.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.GenericControls.GenericCombobox">
            <summary>
            The GenericComboboc is a formatted Combobox.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.GenericControls.GenericCombobox.#ctor">
            <summary>
            Initializes a new instance of the GenericCombobox class.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Explorer.NodeActionRefresh">
            <summary>
            Represents 'Refresh' node action.
            </summary>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.Explorer.NodeActionRefresh.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionRefresh class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.NodeActionGroupedCopyPath`1">
            <summary>
            Represents 'Copy full path' node action for grouped entity.
            </summary>
            <typeparam name="Enity">Entity type.</typeparam>
        </member>
        <member name="M:DHI.Solutions.Generic.UI.NodeActionGroupedCopyPath`1.#ctor(System.Collections.Generic.IList{DHI.Solutions.Generic.ITreeNode})">
            <summary>
            Initializes a new instance of the NodeActionGroupedCopyPath class for specified nodes.
            </summary>
            <param name="nodes">Nodes for which action should be created.</param>
        </member>
        <member name="P:DHI.Solutions.Generic.UI.NodeActionGroupedCopyPath`1.EntityList">
            <summary>
            Gets or sets IEntityList for Entity type.
            </summary>
        </member>
        <member name="T:DHI.Solutions.Generic.UI.Explorer.NamespaceDoc">
            <summary>
            <para>
            The <see cref="N:DHI.Solutions.Generic.UI.Explorer"/> namespace contains some of explorer related classes.
            </para>
            </summary>
        </member>
    </members>
</doc>
